openapi: 3.0.0
info:
  version: 1.5.3
  title: YouthChina
  license:
    name: MIT
servers:
  - url: 'http://youthchina.io/api/v1'
paths:
  '/jobs/{id}':
    get:
      tags:
        - Job
      summary: 获得工作信息
      description: get job info by id
      operationId: getJob
      parameters:
        - in: query
          name: detailLevel
          required: true
          schema:
            type: integer
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: job info
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Job'
                  status:
                    $ref: '#/components/schemas/Status'
    put:
      summary: 更改工作信息
      tags:
        - Job
      parameters:
        - name: id
          required: true
          in: path
          description: job id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      responses:
        '204':
          description: updated success
    delete:
      summary: 删除工作
      tags:
        - Job
      parameters:
        - name: id
          required: true
          in: path
          description: job id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: deleted successed.
        '404':
          description: target job does not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatus'
  '/jobs':
    post:
      summary: 发布工作
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: job info
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Job'
                  status:
                    $ref: '#/components/schemas/Status'
  # '/jobs/search':
  #   post:
  #     tags:
  #       - Job
  #     summary: job search
  #     description: search job by complex conditions
  #     operationId: searchJob
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/JobSearch'
  #     parameters:
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '201':
  #         description: search result
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  
  '/jobs/{id}/apply':
    post:
      summary: 发起申请不提交任何东西
      tags:
        - Application
      parameters:
        - name: id
          in: path
          description: id of the job
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: apply successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Application'
                  status:
                    $ref: '#/components/schemas/Status'
        '403':
          description: cannot apply for job
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4032
                  reason: cannot apply for job because it has passed deadline
        '404':
          description: job not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4042
                  reason: Cannot find job with id 124
  '/jobs/{id}/apply/pdf/email':
    post:
      summary: 用pdf申请工作并且发送邮件
      tags:
        - Application
      description: send resume to company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
              description: video to uploaded
      parameters:
        - name: pdfid
          in: path
          description: id of the job
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: id of the job
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: successfully send email
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Application'
                  status:
                    $ref: '#/components/schemas/Status'
  '/jobs/{id}/apply/online/email':
    post:
      summary: 用电子简历申请工作并且发送邮件
      tags:
        - Application
      description: send resume to company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
              description: video to uploaded
      parameters:
        - name: onlineid
          in: path
          description: id of the job
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: id of the job
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: successfully send email
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Application'
                  status:
                    $ref: '#/components/schemas/Status'
  '/applicants/{id}/applications':
    get:
      summary: 获得所有申请的公司
      tags:
        - Application
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: return the application of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Application'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: user not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
  '/jobs/{id}/attention':
    put:
      summary: 收藏工作
      tags:
        - Job
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: collect successful
        '400':
          description: 'cannot collect this job, maybe the job has already deleted'
  '/users/{id}/attentions':
    get:
      summary: 获得关注的文章，工作等
      tags:
        - Collection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - job
              - company
              - question
              - answer
              - article
              - video
          description: determine what part of attention list to return
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: return one of the following based on the type parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      companies:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - company
                          properties:
                            id:
                              type: integer
                            company:
                              $ref: '#/components/schemas/Company'
                      jobs:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - job
                          properties:
                            id:
                              type: integer
                            job:
                              $ref: '#/components/schemas/Job'
                      questions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - questions
                          properties:
                            id:
                              type: integer
                            question:
                              $ref: '#/components/schemas/QuestionBasic'
                      answers:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - answers
                          properties:
                            id:
                              type: integer
                            answer:
                              $ref: '#/components/schemas/AnswerBasic'
                      articles:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - article
                          properties:
                            id:
                              type: integer
                            article:
                              $ref: '#/components/schemas/Article'
                      videos:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - video
                          properties:
                            id:
                              type: integer
                            video:
                              $ref: '#/components/schemas/Video'
                  status:
                    $ref: '#/components/schemas/Status'
  '/my':
    get:
      summary: 获得我发布的文章，职位等
      tags:
        - My
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - job
              - company
              - question
              - answer
              - article
              - video
          description: determine what part of attention list to return
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: return one of the following based on the type parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      companies:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - company
                          properties:
                            id:
                              type: integer
                            company:
                              $ref: '#/components/schemas/Company'
                      jobs:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - job
                          properties:
                            id:
                              type: integer
                            job:
                              $ref: '#/components/schemas/Job'
                      questions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - questions
                          properties:
                            id:
                              type: integer
                            question:
                              $ref: '#/components/schemas/QuestionBasic'
                      answers:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - answers
                          properties:
                            id:
                              type: integer
                            answer:
                              $ref: '#/components/schemas/AnswerBasic'
                      articles:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - article
                          properties:
                            id:
                              type: integer
                            article:
                              $ref: '#/components/schemas/Article'
                      videos:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - video
                          properties:
                            id:
                              type: integer
                            video:
                              $ref: '#/components/schemas/Video'
                  status:
                    $ref: '#/components/schemas/Status'
  '/jobs/attentions/{id}':
    delete:
      summary: 删除收藏的工作
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/companies/attentions/{id}':
    delete:
      summary: 删除收藏的公司
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/questions/attentions/{id}':
    delete:
      summary: 删除收藏的问题
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/answers/attentions/{id}':
    delete:
      summary: 删除收藏的答案
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/editorials/attentions/{id}':
    delete:
      summary: 删除收藏的短则
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/articles/attentions/{id}':
    delete:
      summary: 删除收藏的文章
      tags:
        - Collection
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: id of collection
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete target collection
  '/questions':
    post:
      summary: 发布问题
      tags:
        - Question
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: create question
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Question'
                  status:
                    $ref: '#/components/schemas/Status'
        '400':
          description: cannot create question due to user's error
    # get:
    #   tags:
    #     - Question
    #   parameters:
    #     - name: company
    #       in: query
    #       description: company name
    #       schema:
    #         type: string
    #     - name: job
    #       in: query
    #       description: job name
    #       schema:
    #         type: string
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #     - name: offset
    #       in: query
    #       required: false
    #       description: start index of element
    #       schema:
    #         type: string
    #     - name: limit
    #       in: query
    #       required: false
    #       description: start index of element
    #       schema:
    #         type: string
    #     - name: page
    #       in: query
    #       required: false
    #       description: start index of element
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: search job
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               content:
    #                 properties:
    #                   data:
    #                     type: array
    #                     items:
    #                       $ref: '#/components/schemas/Question'
    #                   offset:
    #                     type: integer
    #                   limit:
    #                     type: integer
    #                   page_count:
    #                     type: integer
    #                   item_count:
    #                     type: integer
    #                   page_index:
    #                     type: integer
    #                   is_first:
    #                     type: boolean
    #                   is_last:
    #                     type: boolean
    #               status:
    #                 $ref: '#/components/schemas/Status'
    #     '400':
    #       description: cannot create question due to user's error
  '/questions/{id}':
    get:
      summary: 获得问题
      tags:
        - Question
      parameters:
        - name: id
          required: true
          in: path
          description: question id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: return target question
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Question'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: target question does not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatus'
    delete:
      summary: 删除问题
      tags:
        - Question
      parameters:
        - name: id
          required: true
          in: path
          description: question id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: deleted successed.
        '404':
          description: target question does not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatus'
    put:
      summary: 更新问题
      tags:
        - Question
      parameters:
        - name: id
          required: true
          in: path
          description: id of the question
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
      responses:
        '204':
          description: updated success
  '/questions/{id}/answers':
    get:
      summary: 获得问题的答案
      tags:
        - Question
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: the answer list of target question
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AnswerBasic'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
    post:
      summary: 发布答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - body
              properties:
                id:
                  type: integer
                body:
                  $ref: '#/components/schemas/RichText'
                is_anonymous:
                  type: boolean
                  default: false
                create_at:
                  type: integer
      responses:
        '201':
          description: target answer
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Answer'
                  status:
                    $ref: '#/components/schemas/Status'
  # '/questions/{questionId}/invite/{userId}':
  #   put:
  #     tags:
  #       - Question
  #     parameters:
  #       - name: questionId
  #         required: true
  #         in: path
  #         schema:
  #           type: integer
  #       - name: userId
  #         required: true
  #         in: path
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '201':
  #         description: invitation send successfully.
  # '/questions/{id}/invite':
  #   put:
  #     tags:
  #       - Question
  #     parameters:
  #       - name: id
  #         required: true
  #         in: path
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               invited:
  #                 type: array
  #                 items:
  #                   type: integer
  #     responses:
  #       '201':
  #         description: invitation send successfully.
  '/questions/{id}/attention':
    put:
      summary: 收藏问题
      tags:
        - Question
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: upvote successfullly
  '/answers/{id}':
    get:
      summary: 获得答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: target answer
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Answer'
                  status:
                    $ref: '#/components/schemas/Status'
    put:
      summary: 更改答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
      responses:
        '200':
          description: target answer
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Answer'
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: 删除答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: success
        '403':
          description: do not have authority to delete answer
  '/answers/{id}/comments':
    post:
      summary: 发布回答评论
      tags:
        - Answer
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: comments successfully
    get:
      summary: 获得回答全部评论
      tags:
        - Answer
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Comment'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/answers/{id}/upvote':
    put:
      summary: 点赞答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: upvote successfullly
    # delete:
    #   summary: 取消答案
    #   tags:
    #     - Answer
    #   parameters:
    #     - name: id
    #       required: true
    #       in: path
    #       schema:
    #         type: integer
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '201':
    #       description: upvote successfullly
  '/answers/{id}/downvote':
    put:
      summary: 反对答案
      tags:
        - Answer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: downvote successfullly
    # delete:
    #   summary: 取消反对
    #   tags:
    #     - Answer
    #   parameters:
    #     - name: id
    #       required: true
    #       in: path
    #       schema:
    #         type: integer
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '201':
    #       description: downvote successfullly
  '/answers/{id}/vote':
    delete:
      summary: 取消点赞或反对
      tags:
        - Answer
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
  '/answers/{id}/attention':
    put:
      summary: 收藏回答
      tags:
        - Answer
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: collect successful
        '400':
          description: 'cannot collect this answer, maybe the answer has already deleted'
  '/applicants/resgister':
    post:
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - date_of_birth
                - password
                - phonenumber
                - email
                - current_city
                - prefer_industry
                - prefer_city
              properties:
                username:
                  type: string
                date_of_birth:
                  type: string
                password:
                  type: string
                phone_number:
                  type: string
                email:
                  type: string
                nation:
                  type: string
                gender:
                  type: string
                age:
                  type: integer
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: register success
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/User'
                  status:
                    $ref: '#/components/schemas/Status'
  '/me':
    get:
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Security
      responses:
        '200':
          description: Return current logined user
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/User'
                  status:
                    $ref: '#/components/schemas/Status'
        '401':
          description: not loged in
  '/login':
    post:
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - password
              properties:
                id:
                  type: integer
                password:
                  type: string
      responses:
        '200':
          description: login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/User'
                  status:
                    $ref: '#/components/schemas/Status'
  '/articles/{id}':
    get:
      summary: 获取文章
      tags:
        - Article
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Article'
                  status:
                    $ref: '#/components/schemas/Status'
    put:
      summary: 更新文章
      tags:
        - Article
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Article'
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: 删除文章
      tags:
        - Article
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: delete successfully
        '403':
          description: no auth
  '/articles/{id}/attention':
    put:
      summary: 收藏文章
      tags:
        - Article
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: collect successful
        '400':
          description: 'cannot collect this article, maybe the article has already deleted'
  '/articles':
    post:
      summary: 发布文章
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Article'
                  status:
                    $ref: '#/components/schemas/Status'
  '/articles/{id}/comments':
    put:
      summary: 发布文章评论
      tags:
        - Article
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: comments successfully
    get:
      summary: 获得文章全部评论
      tags:
        - Article
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: comments successfully
  '/articles/{id}/upvote':
    put:
      summary: 点赞文章
      tags:
        - Article
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: upvote successfullly
    # delete:
    #   summary: 取消点赞
    #   tags:
    #     - Article
    #   parameters:
    #     - name: id
    #       required: true
    #       in: path
    #       schema:
    #         type: integer
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '201':
    #       description: upvote successfullly
  '/articles/{id}/downvote':
    put:
      summary: 反对文章
      tags:
        - Article
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: downvote successfullly
    # delete:
    #   summary: 取消反对
    #   tags:
    #     - Article
    #   parameters:
    #     - name: id
    #       required: true
    #       in: path
    #       schema:
    #         type: integer
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '201':
    #       description: downvote successfullly
  '/articles/{id}/cancel':
    delete:
      summary: 取消点赞或反对
      tags:
        - Article
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
  # '/articles/{id}/comments':
  #   post:
  #     tags:
  #       - Article
  #     parameters:
  #       - name: id
  #         in: path
  #         schema:
  #           type: integer
  #         required: true
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CommentRequest'
  #     responses:
  #       '201':
  #         description: successful
  #   get:
  #     tags:
  #       - Article
  #     parameters:
  #       - name: id
  #         in: path
  #         schema:
  #           type: integer
  #         required: true
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: successful
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Comment'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  '/companies/{id}':
    get:
      summary: 获取公司信息
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          description: company id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Company'
                  status:
                    $ref: '#/components/schemas/Status'
    put:
      summary: 更改公司信息
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          description: company id
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Company'
                  status:
                    $ref: '#/components/schemas/Status'
  '/companies':
    post:
      summary: 发布公司
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: company name
                location:
                  $ref: '#/components/schemas/Location'
                nation:
                  type: string
                  description: company nation
                website:
                  type: string
                  description: company website
                note:
                  type: string
                  description: introduction
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Company'
                  status:
                    $ref: '#/components/schemas/Status'
        '403':
          description: do not have privilege to create company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatus'
  '/companies/{id}/attention':
    put:
      summary: 收藏公司
      tags:
        - Company
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: collect successful
        '400':
          description: 'cannot collect this job, maybe the job has already deleted'
  # '/videos/{id}':
  #   get:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         in: path
  #         schema:
  #           type: integer
  #         required: true
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: successful
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Video'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #   delete:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         in: path
  #         schema:
  #           type: integer
  #         required: true
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '204':
  #         description: successful
  # '/videos':
  #   post:
  #     parameters:
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     tags:
  #       - Video
  #     requestBody:
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: string
  #             format: binary
  #             description: video to uploaded
  #     responses:
  #       '201':
  #         description: successful
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Video'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/videos/{id}/comments':
  #   post:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         schema:
  #           type: integer
  #         in: path
  #         required: true
  #         description: video id
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CommentRequest'
  #     responses:
  #       '201':
  #         description: successful
  #   get:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         schema:
  #           type: integer
  #         in: path
  #         required: true
  #         description: video id
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: successful
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Comment'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/videos/{id}/upvote':
  #   put:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         schema:
  #           type: integer
  #         in: path
  #         required: true
  #         description: video id
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: successful
  # '/videos/{id}/attention':
  #   put:
  #     tags:
  #       - Video
  #     parameters:
  #       - name: id
  #         schema:
  #           type: integer
  #         in: path
  #         required: true
  #         description: video id
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: successful
  '/editorials/{id}':
    get:
      summary: 获取短则
      tags:
        - Editorials
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Editorial'
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: 删除短则
      tags:
        - Editorials
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '204':
          description: successful
    put:
      summary: 更改短则
      tags:
        - Editorials
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequestWithCompany'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Editorial'
                  status:
                    $ref: '#/components/schemas/Status'
  '/editorials':
    post:
      summary: 发布短则
      parameters:
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Editorials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequestWithCompany'
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Editorial'
                  status:
                    $ref: '#/components/schemas/Status'
  '/editorials/{id}/comments':
    post:
      summary: 发布短则评论
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: successful
    get:
      summary: 获得短则全部评论
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: video id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Comment'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/editorials/{id}/upvote':
    put:
      summary: 点赞短则
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
    # delete:
    #   summary: 取消点赞
    #   tags:
    #     - Editorials
    #   parameters:
    #     - name: id
    #       schema:
    #         type: integer
    #       in: path
    #       required: true
    #       description: editorials id
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: successful
  '/editorials/{id}/downvote':
    put:
      summary: 反对短则
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
    # delete:
    #   summary: 取消反对
    #   tags:
    #     - Editorials
    #   parameters:
    #     - name: id
    #       schema:
    #         type: integer
    #       in: path
    #       required: true
    #       description: editorials id
    #     - in: header
    #       name: X-AUTHENTICATION
    #       required: true
    #       description: authentication header
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: successful
  '/editorials/{id}/vote':
    delete:
      summary: 取消点赞或反对
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
  '/editorials/{id}/attention':
    put:
      summary: 收藏短则
      tags:
        - Editorials
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: editorials id
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: successful
  # '/job-for-you/intern':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/job-for-you/campus':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/job-for-you/general':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/home/new':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/home/hot':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Job'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  '/discovery/users':
    get:
      summary: 推荐用户
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend users
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/discovery/companies':
    get:
      summary: 推荐公司
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend company
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Company'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/disconvery/articles':
    get:
      summary: 推荐文章
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend users
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Article'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/discovery/questions':
    get:
      summary: 推荐问题
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Question'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/discovery/jobs':
    get:
      summary: 推荐工作
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Job'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  # '/discovery/videos':
  #   get:
  #     tags:
  #       - Discover
  #     parameters:
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: recommend jobs
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Video'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  '/discovery/editorials':
    get:
      summary: 推荐短则
      tags:
        - Discover
      parameters:
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: recommend jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Editorial'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/discovery':
    get:
      summary: 混合推荐
      tags:
        - Discover
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - job
              - company
              - question
              - answer
              - article
              - video
          description: determine what part of discovery list to return
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: return one of the following based on the type parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      discovery:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: the type of object
                            object:
                              type: object
                              description: the object of given type(may be Article, User, ...)
                  status:
                    $ref: '#/components/schemas/Status'
  '/resumes/online':
    post:
      summary: 发布电子简历
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Resume
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume:
                  type: string
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
    get:
      summary: 获得所有电子简历
      tags:
        - Resume
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: resume id
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: 删除电子简历
      tags:
        - Resume
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: deleted
  '/resumes/online/{id}':
    get:
      summary: 获得所有电子简历
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Resume
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
  '/resumes/pdf':
    post:
      summary: 发布pdf简历
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Resume
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume:
                  type: string
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
    get:
      summary: 获得所有pdf简历
      tags:
        - Resume
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: resume id
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: 删除pdf简历
      tags:
        - Resume
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: deleted
  '/resumes/pdf/{id}':
    get:
      summary: 获得pdf简历
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      tags:
        - Resume
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                      jsons:
                        type: array
                        items:
                          type: object
                  status:
                    $ref: '#/components/schemas/Status'
  # '/applicant/{id}/resumes':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: applicant id
  #         schema:
  #           type: integer
  #         required: true
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: resumes
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: object
  #                       properties:
  #                         id:
  #                           type: integer
  #                         jsons:
  #                           type: array
  #                           items:
  #                             type: object
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  '/friends/{id}/apply':
    post:
      tags:
        - Friends
      parameters:
        - name: id
          description: other guy's id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      reference_id:
                        type: integer
                      create_at:
                        type: string
                  status:
                    $ref: '#/components/schemas/Status'
                        
  '/friends/{id}':
    delete:
      tags:
        - Friends
      parameters:
        - name: id
          description: other guy's id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      reference_id:
                        type: integer
                      create_at:
                        type: string
                  status:
                    $ref: '#/components/schemas/Status'
  '/friends/application/{reference_id}/approval':
    put:
      tags:
        - Friends
      parameters:
        - name: reference_id
          description:  reference_id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: "approval"
  '/friends/application/{reference_id}/deny':
    put:
      tags:
        - Friends
      parameters:
        - name: reference_id
          description:  reference_id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: "deny"
                    
  '/friends/applications/{id}':
    get:
      tags:
        - Friends
      parameters:
        - name: id
          description: application id
          in: path
          schema:
            type: integer
          required: true
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      reference_id:
                        type: integer
                      create_at:
                        type: string
                  status:
                    $ref: '#/components/schemas/Status'
  '/search':
    get:
      tags:
        - Util
      parameters:
        - name: type
          description: search entity type, default to be null, means search everything
          in: query
          schema:
            type: string
          required: false
        - name: title
          description: search element in title
          in: query
          schema:
            type: string
          required: false
        - name: text
          description: search element in title
          in: query
          schema:
            type: string
          required: false
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: search result
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            content:
                              $ref: '#/components/schemas/Article'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
  '/comments/{id}':
    get:
      summary: 获得文章，问题等评论
      description: 返回文章，回答等的全部评论
      tags:
        - Comment
      parameters:
        - name: id
          description: id of articles
          
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description:
            "nike"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Comment'
    # put:
    #   summary: 发布评论
    #   description: 发布评论
    #   tags:
    #     - Comment
    #   parameters:
    #     - name: id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: X-AUTHENTICATION
    #       in: header
    #       required: true
    #       schema:
    #         type: string
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/CommentRequest'
    #   responses:
    #     '200':
    #       description: 'nike'
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               content:
    #                 $ref: '#/components/schemas/Comment'
    delete:
      summary: 删除评论
      description: 删除评论
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
  # '/comments':
  #   post:
  #     tags:
  #       - Comment
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CommentRequest'
  #     responses:
  #       '200':
  #         description: 'nike'
  '/comments/(comment_id)/upvote':
    put:
      summary: 点赞评论
      description: 评论点赞
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
    # delete:
    #   summary: 删除点赞
    #   description: 评论点赞
    #   tags:
    #     - Comment
    #   parameters:
    #     - name: id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: X-AUTHENTICATION
    #       in: header
    #       required: true
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: 'nike'
  '/comments/(comment_id)/downvote':
    put:
      summary: 反对评论
      description: 评论反对
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
    # delete:
    #   summary: 删除反对
    #   description: 评论反对
    #   tags:
    #     - Comment
    #   parameters:
    #     - name: id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: X-AUTHENTICATION
    #       in: header
    #       required: true
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: 'nike'
  '/comments/(comment_id)/vote':
    delete:
      summary: 取消点赞和反对
      description: 评论点赞
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
  # '/answers/{answer_id}/comments/{comment_id}':
  #   get:
  #     description:
  #     tags:
  #       - Comment
  #     responses:
  #       '200':
  #         description: 'nike'
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         type: object
  #                         properties:
  #                           type:
  #                             type: string
  #                           content:
  #                             $ref: '#/components/schemas/Comment'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #     parameters:
  #       - name: comment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: answer_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  # '/articles/{article_id}/comments/{comment_id}':
  #   get:
  #     tags:
  #       - Comment
  #     responses:
  #       '200':
  #         description: 'nike'
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         type: object
  #                         properties:
  #                           type:
  #                             type: string
  #                           content:
  #                             $ref: '#/components/schemas/Comment'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #     parameters:
  #       - name: comment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: article_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  # '/editorials/{editorial_id}/comments/{comment_id}':
  #   get:
  #     tags:
  #       - Comment
  #     responses:
  #       '200':
  #         description: 'nike'
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         type: object
  #                         properties:
  #                           type:
  #                             type: string
  #                           content:
  #                             $ref: '#/components/schemas/Comment'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #     parameters:
  #       - name: comment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: editorial_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  # '/comments/{comment_id}':
  #   get:
  #     tags:
  #       - Comment
  #     parameters:
  #       - name: comment_id
  #         description: the id of articles, answer and more
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description:
  #           "nike"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Comment'
  #   put:
  #     tags:
  #       - Comment
  #     parameters:
  #       - name: comment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CommentRequest'
  #     responses:
  #       '200':
  #         description: 'nike'
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Comment'
  #   delete:
  #     tags:
  #       - Comment
  #     parameters:
  #       - name: comment_id
  #         in: path
  #         required: true
  #         schema:
  #           type: integer
  #       - name: X-AUTHENTICATION
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: 'nike'
  '/comments/{commentid}/replies':
    get:
      summary: 获得评论所有回复
      description: 返回评论全部回复
      tags:
        - Comment
      parameters:
        - name: commentid
          in: path
          required: true
          schema:
            type: integer
        
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Comment'
    put:
      summary: 发布回复
      description: 发表回复
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '200':
          description: 'nike'
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Comment'
  '/replies/{reply_id}/upvote':
    put:
      summary: 点赞回复
      description: 回复点赞
      tags:
        - Comment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
        - name: reply_id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
    # delete:
    #   summary: 删除点赞
    #   description: 回复反对
    #   tags:
    #     - Comment
    #   parameters:
    #     - name: comment_id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: reply_id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: X-AUTHENTICATION
    #       in: header
    #       required: true
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: 'nike'
  '/replies/{reply_id}/downvote':
    put:
      summary: 反对回复
      tags:
        - Comment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
        - name: reply_id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
    # delete:
    #   summary: 删除反对
    #   tags:
    #     - Comment
    #   parameters:
    #     - name: comment_id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: reply_id
    #       in: path
    #       required: true
    #       schema:
    #         type: integer
    #     - name: X-AUTHENTICATION
    #       in: header
    #       required: true
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: 'nike'
  '/replies/{reply_id}/vote':
    delete:
      summary: 取消点赞和反对
      description: 回复点赞
      tags:
        - Comment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
        - name: reply_id
          in: path
          required: true
          schema:
            type: integer
        - name: X-AUTHENTICATION
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'nike'
  '/applicants/{id}':
    get:
      summary: 获得人profile
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      responses:
        '200':
          description: return target user
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Applicant'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    put:
      summary: 更改profile
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantRequest'
      responses:
        '200':
          description: return target user
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Applicant'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
  # '/applicants':
  #   post:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/ApplicantRequest'
  #     responses:
  #       '201':
  #         description: created
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #                 - applicant
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Applicant'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/applicants/{id}/contacts':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: return target user's 1
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/ContactInfo'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   put:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: applicantId
  #         in: path
  #         description: applicant id
  #         required: true
  #         schema:
  #           type: integer
  #       - name: id
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/ContactInfo'
  #     responses:
  #       '200':
  #         description: return target user's 1
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/ContactInfo'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   post:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: applicantId
  #         in: path
  #         description: applicant id
  #         required: true
  #         schema:
  #           type: integer
  #       - name: id
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/ContactInfo'
  #     responses:
  #       '200':
  #         description: return target user's 1
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/ContactInfo'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  '/applicants/{id}/educations':
    
    get:
      summary: 获得教育经历
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: return target user's educations
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EducationInfo'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    post:
      summary: 添加教育经历
      tags:
        - applicant
      parameters:
        - name: applicantId
          in: path
          description: applicant id
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationInfoRequest'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/EducationInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    put:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EducationInfoRequest'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      educations:
                        type: array
                        items:
                          $ref: '#/components/schemas/EducationInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
  '/applicants/{id}/educations/{educationID}':
    get:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: educationID
          in: path
          description: education id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return target user's educations
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/EducationInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    delete:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: educationID
          in: path
          description: education id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  '/applicants/{id}/projects':
    get:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: return target user's projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    post:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Project'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    put:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
  '/applicants/{id}/projects/{projectID}':
    get:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: projectID
          in: path
          description: projet id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return target user's projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Project'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    delete:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: projectID
          in: path
          description: projet id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  '/applicants/{id}/experiences':
    get:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: start index of element
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: start index of element
          schema:
            type: string
      responses:
        '200':
          description: return target user's works
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkExperienceInfo'
                      offset:
                        type: integer
                      limit:
                        type: integer
                      page_count:
                        type: integer
                      item_count:
                        type: integer
                      page_index:
                        type: integer
                      is_first:
                        type: boolean
                      is_last:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    post:
      tags:
        - applicant
      parameters:
        - name: applicantId
          in: path
          description: applicant id
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkExperienceInfoRequest'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      experiences:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkExperienceInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    put:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: certificate id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkExperienceInfoRequest'
      responses:
        '200':
          description: return target user's 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      experiences:
                        type: array
                        items:
                          $ref: '#/components/schemas/WorkExperienceInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
  '/applicants/{id}/experiences/{experienceID}':
    get:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: experienceID
          in: path
          description: experience id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return target user's works
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/WorkExperienceInfo'
                  status:
                    $ref: '#/components/schemas/Status'
        '404':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
              example:
                status:
                  code: 4041
                  reason: Cannot find user with id 14
    delete:
      tags:
        - applicant
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - in: header
          name: X-AUTHENTICATION
          required: true
          description: authentication header
          schema:
            type: string
        - name: experienceID
          in: path
          description: experience id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: cannot find
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  # '/applicants/{id}/certificates':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: return target user's works
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Certification'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   post:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: applicantId
  #         in: path
  #         description: applicant id
  #         required: true
  #         schema:
  #           type: integer
  #       - name: id
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Certification'
  #     responses:
  #       '200':
  #         description: return target user's 1
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Certification'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   put:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: array
  #             items:
  #               $ref: '#/components/schemas/Certification'
  #     responses:
  #       '200':
  #         description: return target user's 1
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     certificates:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Certification'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  # '/applicants/{id}/certificates/{certificateID}':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: certificateID
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: return target user's works
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Certification'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   delete:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: certificateID
  #         in: path
  #         description: certificate id
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '204':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  # '/applicants/{id}/extracurriculars':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: offset
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #       - name: page
  #         in: query
  #         required: false
  #         description: start index of element
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: return target user's works
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Extracurricular'
  #                     offset:
  #                       type: integer
  #                     limit:
  #                       type: integer
  #                     page_count:
  #                       type: integer
  #                     item_count:
  #                       type: integer
  #                     page_index:
  #                       type: integer
  #                     is_first:
  #                       type: boolean
  #                     is_last:
  #                       type: boolean
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   post:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: applicant id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Extracurricular'
  #     responses:
  #       '200':
  #         description: return target applicant
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Extracurricular'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   put:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: applicant id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: array
  #             items:
  #               $ref: '#/components/schemas/Extracurricular'
  #     responses:
  #       '200':
  #         description: return target applicant
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   type: object
  #                   properties:
  #                     extracurriculars:
  #                       type: array
  #                       items:
  #                         $ref: '#/components/schemas/Extracurricular'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  # '/applicants/{id}/extracurriculars/{extracurricularID}':
  #   get:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: extracurricularID
  #         in: path
  #         description: extracurricular id
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: return target user's works
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 content:
  #                   $ref: '#/components/schemas/Extracurricular'
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #       '404':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  #             example:
  #               status:
  #                 code: 4041
  #                 reason: Cannot find user with id 14
  #   delete:
  #     tags:
  #       - applicant
  #     parameters:
  #       - name: id
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #       - in: header
  #         name: X-AUTHENTICATION
  #         required: true
  #         description: authentication header
  #         schema:
  #           type: string
  #       - name: extracurricularID
  #         in: path
  #         description: extracurricular id
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '204':
  #         description: cannot find
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   $ref: '#/components/schemas/Status'
  '/static/location':
    get:
      tags:
       - static
      parameters:
       - in: query
         name: target
         description: the region
         schema:
          type: integer
       - in: query
         name: id
         schema:
          type: integer
          
      responses:
        '200':
          description: "null"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      locations:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            value:
                              type: string
                  status:
                    $ref: '#/components/schemas/Status'
          
components:
  schemas:
    ContentRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/RichText'
    Status:
      type: object
      properties:
        code:
          type: integer
          format: int64
        reason:
          type: string
    ErrorStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
    JobSearch:
      type: object
      properties:
        industry:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
    Job:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: name of job
        organization:
          $ref: '#/components/schemas/Organization'
        location:
          type: string
        type:
          type: string
          enum:
            - full-time
            - part-time
            - internship
        deadLine:
          type: string
        job_description:
          type: string
        job_duty:
          type: string
    JobRequest:
      type: object
      properties:
        name:
          type: string
          description: name of job
        organization_id:
          type: integer
        location:
          type: array
          items:
            type: integer
        type:
          type: string
          enum:
            - full-time
            - part-time
            - internship
        deadLine:
          type: string
        job_description:
          type: string
        job_duty:
          type: string
    Organization:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatarUrl:
          type: string
          pattern: '(http|https)://(.?)*'
        location:
          type: string
        website:
          type: string
          pattern: '(http|https)://(.?)*'
        note:
          type: string
        nation:
          type: string
    User:
      type: object
      required:
        - id
        - username
        - email
        - phonenumber
        - register_date
        - real_name
        - gender
        - nation
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        phonenumber:
          type: string
        register_date:
          type: string
        real_name:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        nation:
          type: string
        avatar_url:
          type: string
        role:
          type: string
        age:
          type: integer
    NewUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
    ContactInfo:
      type: object
      required:
        - emails
        - phonenumbers
      properties:
        emails:
          type: array
          items:
            type: string
            pattern: (.?)*@(.?)*
        phonenumbers:
          type: array
          items:
            type: string
    EducationInfo:
      type: object
      required:
        - university
        - major
        - degree
        - duration
      properties:
        university:
          type: string
        major:
          type: string
        degree:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        note:
          type: string
    EducationInfoRequest:
      type: object
      required:
        - university_id
        - major
        - degree
        - duration
      properties:
        university_id:
          type: string
        major:
          type: string
        degree:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        location:
          $ref: '#/components/schemas/Location'
        note:
          type: string
    WorkExperienceInfo:
      type: object
      required:
        - employer
        - position
        - duration
        - location
      properties:
        id:
          type: integer
        employer:
          type: string
        position:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        location:
          type: string
        note:
          type: string
    WorkExperienceInfoRequest:
      type: object
      required:
        - employer
        - position
        - duration
        - location
      properties:
        id:
          type: integer
        employer:
          type: string
        position:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        location:
          $ref: '#/components/schemas/Location'
        note:
          type: string
    Certification:
      type: object
      required:
        - name
        - duration
      properties:
        name:
          type: string
        authority:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        note:
          type: string
    Extracurricular:
      type: object
      required:
        - name
        - role
        - organization
        - duration
        - location
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
        organization:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        note:
          type: string
    Project:
      type: object
      required:
        - name
        - role
        - duration
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        note:
          type: string
    Duration:
      type: object
      properties:
        begin:
          type: string
          pattern: timestamp
        end:
          type: string
          pattern: timestamp
    ApplicantRequest:
      type: object
      required:
        - name
        - avatarUrl
      properties:
        name:
          type: string
        avatarUrl:
          type: string
        isInJob:
          type: boolean
        currentCompanyId:
          type: integer
        skills:
          type: array
          items:
            type: string
        educations:
          type: array
          items:
            type: object
            required:
              - university
              - major
              - degree
              - duration
              - location
            properties:
              university:
                type: string
              major:
                type: string
              degree:
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              location:
                $ref: '#/components/schemas/Location'
              note:
                type: string
        contacts:
          $ref: '#/components/schemas/ContactInfo'
        works:
          type: array
          items:
            type: object
            required:
              - employer
              - position
              - duration
              - location
            properties:
              employer:
                type: string
              position:
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              location:
                $ref: '#/components/schemas/Location'
              note:
                type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        extracurriculars:
          type: array
          items:
            $ref: '#/components/schemas/Extracurricular'
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
    Applicant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        avatarUrl:
          type: string
        isInJob:
          type: boolean
        skills:
          type: array
          items:
            type: string
        currentCompany:
          $ref: '#/components/schemas/Company'
        educations:
          type: array
          items:
            $ref: '#/components/schemas/EducationInfo'
        contacts:
          $ref: '#/components/schemas/ContactInfo'
        works:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperienceInfo'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        extracurriculars:
          type: array
          items:
            $ref: '#/components/schemas/Extracurricular'
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
    JobResponse:
      allOf:
        - $ref: '#/components/schemas/Job'
        - properties:
            status:
              $ref: '#/components/schemas/Status'
    Company:
      allOf:
        - $ref: '#/components/schemas/Organization'
    Application:
      type: object
      required:
        - id
        - companyId
        - positionId
        - status
      properties:
        id:
          type: integer
        position:
          $ref: '#/components/schemas/Job'
        status:
          type: string
    CollectionStatus:
      type: string
      enum:
        - active
        - inactive
    AnswerRequest:
      type: object
      required:
        - body
        - is_anonymous
      properties:
        body:
          $ref: '#/components/schemas/RichText'
        is_anonymous:
          type: boolean
          default: false
    AnswerBasic:
      allOf:
        - $ref: '#/components/schemas/AnswerRequest'
        - properties:
            id:
              type: integer
              description: answer id
            creator:
              $ref: '#/components/schemas/User'
            modified_at:
              type: string
            create_at:
              type: string
    QuestionRequest:
      type: object
      required:
        - title
        - body
        - is_anonymous
      properties:
        title:
          type: string
          description: question title
        body:
          $ref: '#/components/schemas/RichText'
        is_anonymous:
          type: boolean
          default: flase
        rela_type:
          type: integer
          description: '1 for no rela, 2 for company, 3 for job'
        rela_id:
          type: integer
    QuestionBasic:
      allOf:
        - $ref: '#/components/schemas/QuestionRequest'
        - properties:
            id:
              type: integer
              description: question id
            create_at:
              type: string
            modified_at:
              type: string
            creator:
              $ref: '#/components/schemas/User'
    Question:
      allOf:
        - $ref: '#/components/schemas/QuestionBasic'
        - type: object
          properties:
            answers:
              type: array
              items:
                $ref: '#/components/schemas/AnswerBasic'
    Answer:
      allOf:
        - $ref: '#/components/schemas/AnswerBasic'
        - type: object
          properties:
            question:
              $ref: '#/components/schemas/QuestionBasic'
    RichText:
      type: object
      required:
        - braftEditorRaw
        - previewText
        - resourceList
      properties:
        braftEditorRaw:
          type: object
        previewText:
          type: object
        resourceList:
          type: array
          items:
            type: string
    Comment:
      type: object
      required:
        - id
        - creator
        - body
        - create_at
        - is_anonymous
      properties:
        id:
          type: integer
        creator:
          $ref: '#/components/schemas/User'
        body:
          type: string
        create_at:
          type: integer
        is_anonymous:
          type: boolean
          default: false
    CommentRequest:
      allOf:
        - $ref: '#/components/schemas/ContentRequest'
        - properties:
            is_anonymous:
              type: boolean
              default: false
    ArticleRequest:
      type: object
      properties:
        title:
          type: string
        body:
          $ref: '#/components/schemas/RichText'
        rela_id:
          type: integer
        rela_type:
          type: integer
        is_anonymous:
          type: boolean
          default: false
    Article:
      type: object
      required:
        - id
        - title
        - body
        - company
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          $ref: '#/components/schemas/RichText'
        company:
          $ref: '#/components/schemas/Company'
        create_at:
          type: string
        modified_at:
          type: string
        author:
          $ref: '#/components/schemas/User'
        is_anonymous:
          type: boolean
          default: false
    Video:
      type: object
      properties:
        id:
          type: integer
          description: video id
        url:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        uploader:
          $ref: '#/components/schemas/User'
    Editorial:
      type: object
      properties:
        id:
          type: integer
          description: video id
        body:
          $ref: '#/components/schemas/RichText'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        author:
          $ref: '#/components/schemas/User'
    ContentRequestWithCompany:
      allOf:
        - $ref: '#/components/schemas/ContentRequest'
        - properties:
            rela_type:
              type: integer
            rela_id:
              type: integer
    Location:
      type: object
      required:
        - nation_code
        - location_code
      properties:
        nation_code:
          type: string
        location_code:
          type: string
