<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youthchina.dao.jinhao.CommunityQAMapper">
    <resultMap id="videoInfo" type="com.youthchina.domain.jinhao.communityQA.Video">
        <id property="video_id" column="VIDEO_ID"/>
        <result property="video_title" column="VIDEO_TITLE"/>
        <result property="video_name" column="VIDEO_NAME"/>
        <result property="video_upload_time" column="VIDEO_UPLOAD_TIME"/>
        <result property="rela_id" column="RELA_ID"/>
        <result property="rela_type" column="RELA_TYPE"/>
        <association property="user" javaType="com.youthchina.domain.zhongyang.User">
            <id property="id" column="NEW_USER_ID"/>
            <result property="username" column="NEW_USERNAME"/>
            <result property="email" column="NEW_EMAIL"/>
            <result property="phonenumber" column="NEW_PHONENUMBER"/>
            <result property="registerDate" column="NEW_REGISTERDATE"/>
            <result property="realName" column="NEW_REALNAME"/>
            <result property="gender" column="NEW_GENDER"/>
            <result property="nation" column="NEW_NATION"/>
            <result property="avatarUrl" column="NEW_AVATARURL"/>
            <result property="role" column="NEW_ROLE"/>
            <result property="age" column="NEW_AGE"/>
        </association>
        <collection property="videoComments" ofType="com.youthchina.domain.jinhao.communityQA.VideoComment">
            <id property="comment_id" column="COMMENT_ID"/>
            <result property="comment_content" column="COMMENT_CONTENT"/>
            <result property="user_anony" column="USER_ANONY"/>
            <result property="comment_pub_time" column="COMMENT_PUB_TIME"/>
            <association property="user" javaType="com.youthchina.domain.zhongyang.User"
                         resultMap="com.youthchina.dao.zhongyang.UserMapper.User"/>
        </collection>
    </resultMap>
<resultMap id="questionInfo" type="com.youthchina.domain.jinhao.communityQA.Question">
    <id property="ques_id" column="QUES_ID"/>
    <result property="ques_title" column="QUES_TITLE"/>
    <result property="ques_abbre" column="QUES_ABBRE"/>
    <result property="ques_body" column="QUES_BODY"/>
    <result property="ques_pub_time" column="QUES_PUB_TIME"/>
    <result property="ques_edit_time" column="QUES_EDIT_TIME"/>
    <result property="rela_id" column="RELA_ID"/>
    <result property="rela_type" column="RELA_TYPE"/>
    <result property="user_anony" column="QUES_USERANONY"/>
    <association property="ques_user" javaType="com.youthchina.domain.zhongyang.User">
        <id property="id" column="NEW_USER_ID"/>
        <result property="username" column="NEW_USERNAME"/>
        <result property="email" column="NEW_EMAIL"/>
        <result property="phonenumber" column="NEW_PHONENUMBER"/>
        <result property="registerDate" column="NEW_REGISTERDATE"/>
        <result property="realName" column="NEW_REALNAME"/>
        <result property="gender" column="NEW_GENDER"/>
        <result property="nation" column="NEW_NATION"/>
        <result property="avatarUrl" column="NEW_AVATARURL"/>
        <result property="role" column="NEW_ROLE"/>
        <result property="age" column="NEW_AGE"/>
    </association>
    <collection property="questionAnswers" ofType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        <id property="answer_id" column="ANSWER_ID"/>
        <result property="answer_content" column="ANSWER_CONTENT"/>
        <result property="user_anony" column="USER_ANONY"/>
        <result property="answer_pub_time" column="ANSWER_PUB_TIME"/>
        <result property="answer_edit_time" column="ANSWER_EDIT_TIME"/>
        <association property="answer_user" javaType="com.youthchina.domain.zhongyang.User"
                     resultMap="com.youthchina.dao.zhongyang.UserMapper.User"/>
    </collection>
</resultMap>

<resultMap id="answerInfo" type="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
    <id property="answer_id" column="ANSWER_ID"/>
    <result property="answer_content" column="ANSWER_CONTENT"/>
    <result property="user_anony" column="USER_ANONY"/>
    <result property="answer_pub_time" column="ANSWER_PUB_TIME"/>
    <result property="answer_edit_time" column="ANSWER_EDIT_TIME"/>
    <association property="answer_user" javaType="com.youthchina.domain.zhongyang.User"
                 resultMap="com.youthchina.dao.zhongyang.UserMapper.User"/>
    <association property="question" javaType="com.youthchina.domain.jinhao.communityQA.Question">
        <id property="ques_id" column="QUES_ID"/>
        <result property="ques_title" column="QUES_TITLE"/>
        <result property="ques_abbre" column="QUES_ABBRE"/>
        <result property="ques_body" column="QUES_BODY"/>
        <result property="ques_pub_time" column="QUES_PUB_TIME"/>
        <result property="ques_edit_time" column="QUES_EDIT_TIME"/>
        <result property="user_anony" column="QUES_USERANONY"/>
        <result property="rela_id" column="RELA_ID"/>
        <result property="rela_type" column="RELA_TYPE"/>
        <association property="ques_user" javaType="com.youthchina.domain.zhongyang.User">
            <id property="id" column="NEW_USER_ID"/>
            <result property="username" column="NEW_USERNAME"/>
            <result property="email" column="NEW_EMAIL"/>
            <result property="phonenumber" column="NEW_PHONENUMBER"/>
            <result property="registerDate" column="NEW_REGISTERDATE"/>
            <result property="realName" column="NEW_REALNAME"/>
            <result property="gender" column="NEW_GENDER"/>
            <result property="nation" column="NEW_NATION"/>
            <result property="avatarUrl" column="NEW_AVATARURL"/>
            <result property="role" column="NEW_ROLE"/>
            <result property="age" column="NEW_AGE"/>
        </association>
    </association>
</resultMap>

<resultMap id="commentInfo" type="com.youthchina.domain.jinhao.communityQA.Comment">
    <id property="comment_id" column="COMMENT_ID"/>
    <result property="comment_content" column="COMMENT_CONTENT"/>
    <result property="user_anony" column="USER_ANONY"/>
    <result property="comment_pub_time" column="COMMENT_PUB_TIME"/>
    <result property="comment_edit_time" column="COMMENT_EDIT_TIME"/>
    <association property="user" javaType="com.youthchina.domain.zhongyang.User"
                 resultMap="com.youthchina.dao.zhongyang.UserMapper.User"/>
    <collection property="commentEvaluates" ofType="com.youthchina.domain.jinhao.communityQA.CommentEvaluate">
        <id property="evaluate_id" column="EVALUATE_ID"/>
        <result property="evaluate_type" column="EVALUATE_TYPE"/>
    </collection>
    <collection property="discusses" column="comment_id"
                select="com.youthchina.dao.jinhao.CommunityQAMapper.getDiscussesByCommentId"/>
</resultMap>

<resultMap id="discussInfo" type="com.youthchina.domain.jinhao.communityQA.Discuss">
    <id property="discuss_id" column="DISCUSS_ID"/>
    <result property="discuss_content" column="DISCUSS_CONTENT"/>
    <result property="user_anony" column="USER_ANONY"/>
    <result property="discuss_pub_time" column="DISCUSS_PUB_TIME"/>
    <result property="discuss_target_id" column="DISCUSS_TARGET_ID"/>
    <association property="user" javaType="com.youthchina.domain.zhongyang.User"
                 resultMap="com.youthchina.dao.zhongyang.UserMapper.User"/>
    <collection property="discussEvaluateList" ofType="com.youthchina.domain.jinhao.communityQA.DiscussEvaluate">
        <id property="evaluate_id" column="EVALUATE_ID"/>
        <result property="evaluate_type" column="EVALUATE_TYPE"/>
    </collection>
</resultMap>


    <sql id="newUser">
        newu.USER_ID as NEW_USER_ID, newu.USER_NAME as NEW_USERNAME, newu.USER_MAIL as NEW_EMAIL
        ,newu.USER_PHONE as NEW_PHONENUMBER, newu.USER_REGIST_TIME as NEW_REGISTERDATE
        ,newu.USER_REAL_NAME as NEW_REALNAME, newu.USER_GENDER as NEW_GENDER, newu.USER_NATION as NEW_NATION,
        newu.ROLE_ID as NEW_ROLE, newu.USER_AGE as NEW_AGE
    </sql>
    <sql id="user">
        u.USER_ID,u.USER_NAME,u.USER_MAIL,u.USER_PHONE,u.USER_REGIST_TIME,u.USER_REAL_NAME,
        u.USER_GENDER,u.USER_NATION,u.ROLE_ID as ROLE_TYPE,u.USER_AGE
    </sql>
    <sql id="question">
        q.QUES_ID, q.QUES_TITLE, q.QUES_ABBRE, q.QUES_BODY, q.QUES_PUB_TIME, q.QUES_EDIT_TIME,q.USER_ANONY as QUES_USERANONY
    </sql>
    <sql id="answer">
        a.ANSWER_ID,a.ANSWER_CONTENT,a.USER_ANONY,a.ANSWER_PUB_TIME,a.ANSWER_EDIT_TIME,a.USER_ID as ANSWER_USER_ID
    </sql>
    <select id="getQuestionById" resultMap="questionInfo" parameterType="java.lang.Integer">
        select <include refid="question"/>,
               <include refid="newUser"/>,
               <include refid="user"/>,
              <include refid="answer"/>,
               aqm.RELA_ID,aqm.RELA_TYPE from COM_QUESTION q
                                          left join (SYS_USER newu, COM_AUTHOR_QUESTION_MAP aqm)
                                              on q.QUES_ID = aqm.QUES_ID and newu.USER_ID = aqm.USER_ID and newu.IS_DELETE=0
                                          left join ((select olda.* from COM_QUESTION_ANSWER olda, COM_QUESTION_ANSWER_MAP m
                                                        where m.QUES_ID=#{ques_id} and olda.ANSWER_ID=m.ANSWER_ID and olda.IS_DELETE=0) as a, SYS_USER u)
                                              on a.USER_ID=u.USER_ID and u.IS_DELETE=0
        where q.QUES_ID = #{ques_id} and q.IS_DELETE = 0
    </select>
    <select id="getAnswerById" resultMap="answerInfo" parameterType="java.lang.Integer">
        select <include refid="answer"/>,
                <include refid="user"/>,
                <include refid="newUser"/>,
               <include refid="question"/>, aqm.RELA_ID, aqm.RELA_TYPE
        from COM_QUESTION_ANSWER a
                 left join SYS_USER u on u.USER_ID = a.USER_ID and u.IS_DELETE = 0
                 left join ((select oldq.* from COM_QUESTION oldq, COM_QUESTION_ANSWER_MAP m where m.ANSWER_ID=#{answer_id} and oldq.QUES_ID=m.QUES_ID)
            as q, SYS_USER newu, COM_AUTHOR_QUESTION_MAP aqm) on q.QUES_ID = aqm.QUES_ID and aqm.USER_ID = newu.USER_ID
        where a.ANSWER_ID = #{answer_id} and a.IS_DELETE = 0
    </select>

    <select id="getVideoById" resultMap="videoInfo" parameterType="java.lang.Integer">
        select v.VIDEO_ID, v.VIDEO_TITLE, v.VIDEO_NAME, v.VIDEO_UPLOAD_TIME,
              <include refid="newUser"/>, <include refid="user"/> , newvc.COMMENT_ID,
               newvc.COMMENT_CONTENT, newvc.COMMENT_PUB_TIME,newvc.USER_ANONY, uvm.RELA_ID, uvm.RELA_TYPE from COM_USER_VIDEO v
              left join (SYS_USER newu, COM_USER_VIDEO_MAP uvm)
                    on uvm.VIDEO_ID = v.VIDEO_ID and uvm.USER_ID = newu.USER_ID and newu.IS_DELETE = 0
              left join ((select vc.* from COM_VIDEO_COMMENT vc, COM_VIDEO_COMMENT_MAP vcm
                                 where vcm.VIDEO_ID=#{video_id} and vc.COMMENT_ID=vcm.COMMENT_ID) as newvc, SYS_USER u)
                    on newvc.USER_ID=u.USER_ID and u.IS_DELETE=0
        where v.VIDEO_ID = #{video_id} and v.IS_DELETE = 0
    </select>
    <!-- 列出某个问题的关注人数 -->
    <select id="countTheFollower" parameterType="java.lang.Integer"
            resultType="java.lang.Integer">
        select count(a.atten_id) from COM_QUESTION_ATTENTION a, COM_QUESTION_ATTENTION_MAP m
        where m.ques_id = #{ques_id}
        and m.atten_id = a.atten_id
        and a.atten_cancel = 0
    </select>

    <!--拿到某个回答-->
    <select id="getAnswer" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        select * from COM_QUESTION_ANSWER where answer_id = #{answer_id} and is_delete = 0
    </select>

    <!-- 列出某个回答的赞同数 -->
    <select id="countAgreement" parameterType="java.lang.Integer"
            resultType="java.lang.Integer">
        select count(a.evaluate_id) from COM_ANSWER_EVALUATE_MAP m, COM_ANSWER_EVALUATE a
        where m.answer_id = #{answer_id}
        and a.evaluate_id = m.evaluate_id
        and a.evaluate_type = 1
    </select>

    <!-- 列出某个回答的反对数 -->
    <select id="countDisagreement" parameterType="java.lang.Integer"
            resultType="java.lang.Integer">
        select count(a.evaluate_id) from COM_ANSWER_EVALUATE_MAP m, COM_ANSWER_EVALUATE a
        where m.answer_id = #{answer_id}
          and a.evaluate_id = m.evaluate_id
          and a.evaluate_type = 2
    </select>

    <!-- 列出某个回答的所有评论 -->
    <select id="listAllAnswerComment" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Comment">
        select a.* from COM_ANSWER_COMMENT_MAP m, COM_ANSWER_COMMENT a
        where m.answer_id = #{answer_id}
        and m.comment_id = a.comment_id
        and a.is_delete = 0
        order by a.comment_pub_time asc
    </select>

    <!-- 拿到某个评论-->
    <select id="getComment" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Comment">
        select * from COM_ANSWER_COMMENT
        where comment_id = #{comment_id}
        and is_delete = 0
    </select>

    <!-- 列出某个评论的所有讨论 -->
    <select id="listAllCommentDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.Comment"
            resultType="com.youthchina.domain.jinhao.communityQA.Discuss">
        select a.* from COM_COMMENT_DISCUSS_MAP m, COM_COMMENT_DISCUSS a
        where m.comment_id = #{comment_id}
        and m.discuss_id = a.discuss_id
        and a.is_delete = 0
        order by a.discuss_pub_time asc
    </select>

    <!-- 添加问题 -->
    <insert id="addQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.Question" useGeneratedKeys="true"
    keyProperty="ques_id">
        insert into COM_QUESTION(ques_title,ques_abbre,ques_body,ques_pub_time,ques_edit_time,is_delete, user_anony)
        values (#{ques_title},#{ques_abbre},#{ques_body},now(),now(),0,#{user_anony})
    </insert>

    <!-- 建立问题和用户的映射 -->
    <insert id="createMapBetweenQuestionAndUser">
        insert into COM_AUTHOR_QUESTION_MAP(user_id, ques_id, rela_type, rela_id)
        values (#{user_id}, #{ques_id}, #{rela_type}, #{rela_id})
    </insert>

    <!-- 给问题添加标签 -->
    <insert id="addLabels">
        insert into COM_QUESTION_LABEL_MAP(ques_id, lab_num)
        values
        <foreach collection ="labels" item="label" index= "index" separator =",">
            (
            #{ques_id}, #{label}
            )
        </foreach >
    </insert>

    <!-- 删除问题 -->
    <update id="deleteQuestion" parameterType="java.lang.Integer">
        update COM_QUESTION set is_delete=1, is_delete_time=now()
        where ques_id=#{ques_id}
    </update>

    <!-- 编辑问题 -->
    <update id="editQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.Question">
        update COM_QUESTION set ques_title=#{ques_title}, ques_abbre=#{ques_abbre}, ques_body=#{ques_body},
                                ques_edit_time=now(), user_anony = #{user_anony}
        where ques_id=#{ques_id}
    </update>

    <!-- 拿到问题信息 -->
    <select id="getQuestion" parameterType="java.lang.Integer" resultType="com.youthchina.domain.jinhao.communityQA.Question">
        select * from COM_QUESTION where ques_id = #{ques_id} and is_delete = 0;
    </select>

    <!-- 列出某个问题的所有标签 -->
    <select id="listAllQuestionLabel" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Label">
        select l.* from SYS_COM_LABEL_CLASS l, COM_QUESTION_LABEL_MAP m
        where m.ques_id = #{ques_id}
          and m.lab_num = l.lab_num
          and l.start_status = 1
    </select>

    <!-- 问题删除时，要删除对应的标签映射 -->
    <delete id="deleteQuestionLabel" parameterType="java.lang.Integer">
        delete from COM_QUESTION_LABEL_MAP where ques_id = #{ques_id}
    </delete>

    <!-- 回答问题 -->
    <insert id="addAnswerToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer"
            useGeneratedKeys="true" keyProperty="answer_id">
        insert into COM_QUESTION_ANSWER (answer_content, USER_ID, user_anony, answer_pub_time, answer_edit_time,
                                         is_delete)
        values (#{answer_content}, #{user_id}, #{user_anony}, now(), now(), 0)
    </insert>

    <!-- 建立回答和问题的映射 -->
    <insert id="createMapBetweenQuestionAndAnswer">
        insert into COM_QUESTION_ANSWER_MAP (ques_id, answer_id, answer_level) values (#{ques_id}, #{answer_id},
        #{answer_level})
    </insert>

    <!-- 检查是否被关注 -->
    <select id="isQuestionAttention" resultType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        select a.* from COM_QUESTION_ATTENTION_MAP m, COM_QUESTION_ATTENTION a
        where m.ques_id = #{ques_id}
        and a.user_id = #{user_id}
        and m.atten_id = a.atten_id
    </select>

    <!--得到关注-->
    <select id="getAttention" parameterType="java.lang.Integer" resultType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        select * from COM_QUESTION_ATTENTION where atten_id = #{atten_id}
    </select>

    <!-- 如果第一次关注，则关注问题， 并且建立映射  -->
    <insert id="addAttentionToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention"
    useGeneratedKeys="true" keyProperty="atten_id">
        insert into COM_QUESTION_ATTENTION (user_id, atten_time, atten_cancel)
        values (#{user_id}, now(), 0)
    </insert>

    <!-- 建立映射 -->
    <insert id="createMapBetweenAttentionAndQuestion">
        insert into COM_QUESTION_ATTENTION_MAP (ques_id, atten_id)
        values (#{ques_id}, #{atten_id})
    </insert>
    
    <!-- 如果之前已经关注过，则更新字段 -->
    <update id="reAddAttentionToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        update COM_QUESTION_ATTENTION set atten_cancel=0, atten_time=now()
        where atten_id=#{atten_id}
    </update>

    <!-- 取消关注 -->
    <update id="cancelAttention" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        update COM_QUESTION_ATTENTION set atten_cancel=1, atten_cancel_time=now()
        where atten_id=#{atten_id}
    </update>

    <!-- 删除回答 -->
    <update id="deleteAnswer" parameterType="java.lang.Integer">
        update COM_QUESTION_ANSWER set is_delete=1, is_delete_time=now()
        where answer_id=#{answer_id}
    </update>

    <!--  编辑回答 -->
    <update id="editAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        update COM_QUESTION_ANSWER
        set answer_content=#{answer_content},user_anony=#{user_anony},answer_edit_time=now()
        where answer_id=#{answer_id}
    </update>

    <!-- 查看用户对该回答的评价 -->
    <select id="evaluateStatus" resultType="com.youthchina.domain.jinhao.communityQA.Evaluate">
        select a.* from COM_ANSWER_EVALUATE_MAP m, COM_ANSWER_EVALUATE a
        where m.answer_id = #{answer_id}
        and a.user_id = #{user_id}
        and m.evaluate_id = a.evaluate_id
    </select>

    <!-- 得到评价 -->
    <select id="getAnswerEvaluate" resultType="com.youthchina.domain.jinhao.communityQA.Evaluate"
            parameterType="java.lang.Integer">
        select * from COM_ANSWER_EVALUATE
        where evaluate_id = #{evaluate_id}
    </select>

    <!-- 如果是第一次评价回答，则插入评价，并建立映射 -->
    <insert id="addEvaluateToAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.Evaluate"
            useGeneratedKeys="true" keyProperty="evaluate_id">
        insert into COM_ANSWER_EVALUATE (user_id, evaluate_type, evaluate_time)
        values (#{user_id}, 1, now())
    </insert>

    <!-- 建立映射 -->
    <insert id="createMapBetweenAnswerAndEvaluate">
        insert into COM_ANSWER_EVALUATE_MAP (evaluate_id, answer_id)
        values (#{evaluate_id}, #{answer_id})
    </insert>

    <!-- 如果已经评价过 -->
    <update id="reEvaluateAnswer" parameterType="java.lang.Integer">
        update COM_ANSWER_EVALUATE
        set evaluate_type = 1, evaluate_time = now()
        where evaluate_id = #{evaluate_id}
    </update>

    <update id="deleteEvaluateAnswer" parameterType="java.lang.Integer">
        update COM_ANSWER_EVALUATE
        set EVALUATE_TYPE=0, EVALUATE_TIME=now()
        where EVALUATE_ID=#{evaluate_id}
    </update>
    <!-- 评论回答 -->
    <insert id="addCommentToAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.Comment"
    useGeneratedKeys="true" keyProperty="comment_id">
        insert into COM_ANSWER_COMMENT (comment_content, user_id, user_anony, comment_pub_time, comment_edit_time,
                is_delete)
        values (#{comment_content}, #{user_id}, #{user_anony}, now(), now(), 0)
    </insert>

    <!-- 建立评论和回答的映射关系 -->
    <insert id="createMapBetweenAnswerAndComment">
        insert into COM_ANSWER_COMMENT_MAP (answer_id, comment_id, comment_level)
        values (#{answer_id}, #{comment_id}, #{comment_level})
    </insert>

    <!-- 删除评论 -->
    <update id="deleteComment" parameterType="java.lang.Integer">
        update COM_ANSWER_COMMENT
        set is_delete=1, is_delete_time=now()
        where comment_id=#{comment_id}
    </update>

    <update id="deleteAllCommentEvaluationByCommentId" parameterType="java.lang.Integer">
        update COM_COMMENT_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (select EVALUATE_ID from COM_COMMENT_EVALUATE_MAP where COMMENT_ID = #{comment_id})
    </update>

    <update id="deleteAllDiscussByCommentId" parameterType="java.lang.Integer">
        update COM_COMMENT_DISCUSS set IS_DELETE=1, IS_DELETE_TIME=now()
        where DISCUSS_ID in (select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID = #{comment_id})
    </update>

    <update id="deleteAllDiscussEvaluateByCommentId" parameterType="java.lang.Integer">
        update COM_DISCUSS_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (select EVALUATE_ID from COM_DISCUSS_EVALUATE_MAP where DISCUSS_ID in (
          select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID = #{comment_id}
            ))
    </update>

    <!-- 拿到某个评论的点赞数 -->
    <select id="countCommentAgreement" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(m.evaluate_id) from COM_COMMENT_EVALUATE_MAP m, COM_COMMENT_EVALUATE a
        where m.comment_id = #{comment_id}
        and m.evaluate_id = a.evaluate_id
        and a.evaluate_type = 1
    </select>

    <!-- 查看用户是否评价过这个评论 -->
    <select id="commentEvaluateStatus" resultType="com.youthchina.domain.jinhao.communityQA.CommentEvaluate">
        select a.* from COM_COMMENT_EVALUATE_MAP m, COM_COMMENT_EVALUATE a
        where m.comment_id = #{comment_id}
          and a.user_id = #{user_id}
          and m.evaluate_id = a.evaluate_id
    </select>

    <!-- 如果是第一次评价评论，添加评价，并且建立映射-->
    <insert id="addEvaluateToComment" parameterType="com.youthchina.domain.jinhao.communityQA.CommentEvaluate"
            useGeneratedKeys="true" keyProperty="evaluate_id">
        insert into COM_COMMENT_EVALUATE(user_id, evaluate_type, evaluate_time)
        values (#{user_id}, 1, now())
    </insert>

    <!-- 建立映射 -->
    <insert id="createMapBetweenCommentAndEvaluate">
        insert into COM_COMMENT_EVALUATE_MAP(evaluate_id, comment_id)
        values (#{evaluate_id}, #{comment_id})
    </insert>
    <!-- 拿到评论的评价 -->
    <select id="getCommentEvaluate" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.CommentEvaluate">
        select * from COM_COMMENT_EVALUATE
        where evaluate_id = #{evaluate_id}
    </select>
    <!-- 如果不是第一次评价，则更新字段 -->
    <update id="reEvaluateComment" parameterType="java.lang.Integer">
        update COM_COMMENT_EVALUATE
        set evaluate_type = 1, evaluate_time = now()
        where evaluate_id = #{evaluate_id}
    </update>

    <update id="deleteEvaluateComment" parameterType="java.lang.Integer">
        update COM_COMMENT_EVALUATE
        set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID=#{evaluate_id}
    </update>

     <!--拿到某个讨论-->
    <select id="getDiscuss" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Discuss">
        select * from COM_COMMENT_DISCUSS where discuss_id = #{discuss_id} and is_delete = 0
    </select>

    <!-- 评论讨论 -->
    <insert id="addDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.Discuss"
            useGeneratedKeys="true" keyProperty="discuss_id">
        insert into COM_COMMENT_DISCUSS (discuss_content, discuss_target_id, user_id, user_anony, discuss_pub_time,
                                         is_delete)
        values (#{discuss_content}, #{discuss_target_id}, #{user_id}, #{user_anony}, #{discuss_pub_time},
                #{is_delete})
    </insert>

    <!-- 建立讨论和评论的映射关系 -->
    <insert id="createMapBetweenDiscussAndComment">
        insert into COM_COMMENT_DISCUSS_MAP (comment_id, discuss_id, discuss_level)
        values (#{comment_id},  #{discuss_id}, #{discuss_level})
    </insert>

    <!-- 删除讨论 -->
    <update id="deleteDiscuss" parameterType="java.lang.Integer">
        update COM_COMMENT_DISCUSS
        set is_delete = 1, is_delete_time=now()
        where discuss_id = #{discuss_id}
    </update>

    <!-- 拿到这个讨论的赞同数-->
    <select id="countDiscussAgreement" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(a.evaluate_id) from COM_DISCUSS_EVALUATE_MAP m, COM_DISCUSS_EVALUATE a
        where m.discuss_id = #{discuss_id}
        and m.evaluate_id = a.evaluate_id
        and a.evaluate_type = 1
    </select>

    <!-- 对该讨论的评价状态 -->
    <select id="discussEvaluateStatus" resultType="com.youthchina.domain.jinhao.communityQA.DiscussEvaluate">
        select a.* from COM_DISCUSS_EVALUATE_MAP m, COM_DISCUSS_EVALUATE a
        where m.discuss_id = #{discuss_id}
        and a.user_id = #{user_id}
        and m.evaluate_id = a.evaluate_id
    </select>

    <!-- 如果没有评价过这个讨论，则插入新的评价，并且建立映射-->
    <insert id="addEvaluateToDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.DiscussEvaluate"
    useGeneratedKeys="true" keyProperty="evaluate_id">
        insert into COM_DISCUSS_EVALUATE(user_id, evaluate_type, evaluate_time)
        values (#{user_id}, #{evaluate_type}, #{evaluate_time})
    </insert>

    <insert id="createMapBetweenDiscussAndEvaluate">
        insert into COM_DISCUSS_EVALUATE_MAP(evaluate_id, discuss_id) values (#{evaluate_id}, #{discuss_id})
    </insert>

    <!-- 拿到讨论的评价 -->
    <select id="getDiscussEvaluate" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.DiscussEvaluate">
        select * from COM_DISCUSS_EVALUATE where evaluate_id = #{evaluate_id}
    </select>

    <!-- 如果评价过，则更新字段 -->
    <update id="reEvaluateDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.DiscussEvaluate">
        update COM_DISCUSS_EVALUATE
        set evaluate_type = #{evaluate_type}, evaluate_time = #{evaluate_time}
        where evaluate_id = #{evaluate_id}
    </update>

    <!-- 邀请回答问题-->
    <insert id="addInvitation" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerInvitation"
            useGeneratedKeys="true" keyProperty="invit_id">
        insert into COM_ANSWER_INVITATION (invit_time, invit_accept, invit_ques_id, invit_user_id)
        values (now(), 0, #{invit_ques_id}, #{invit_user_id})
    </insert>

    <!-- 建立邀请和问题的映射-->
    <insert id="createMapBetweenInvitationAndQuestion">
        insert into COM_ANSWER_INVITATION_MAP (invit_id, invited_user_id)
        values (#{invit_id},#{invited_user_id})
    </insert>

    <!-- 拿到某个邀请-->
    <select id="getInvitation" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.AnswerInvitation">
        select * from COM_ANSWER_INVITATION
        where invit_id = #{invit_id}
    </select>

    <!-- 拿到某个用户和邀请的映射（测试使用） -->
    <select id="getInvitationMap" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select INVIT_ID from COM_ANSWER_INVITATION_MAP where INVIT_ID=#{invit_id}
    </select>
    <!-- 接受或者拒绝邀请 -->
    <update id="updateStatusOfInvitation" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerInvitation">
        update COM_ANSWER_INVITATION
        set invit_accept = #{invit_accept}
        where invit_id = #{invit_id}
    </update>

    <!-- 根据时间拿到前十个视频 -->
    <select id="listFirstTenVideos" resultType="com.youthchina.domain.jinhao.communityQA.Video">
        select * from COM_USER_VIDEO
        where is_delete = 0
        order by video_upload_time desc
        limit 10
    </select>

    <!--拿到某用户发布的视频-->
    <select id="listAllMyVideos" parameterType="java.lang.Integer" resultType="com.youthchina.domain.jinhao.communityQA.Video">
        select a.* from COM_USER_VIDEO_MAP m, COM_USER_VIDEO a
        where m.user_id = #{user_id}
        and m.video_id = a.video_id
        and a.is_delete = 0
    </select>
    <!-- 发布视频 -->
    <insert id="addVideo" parameterType="com.youthchina.domain.jinhao.communityQA.Video" useGeneratedKeys="true"
            keyProperty="video_id">
        insert into COM_USER_VIDEO (video_title, video_name, video_upload_time, is_delete)
        values (#{video_title}, #{video_name}, now(), 0)
    </insert>

    <!-- 建立用户和视频的映射 -->
    <insert id="createMapBetweenVideoAndUser">
        insert into COM_USER_VIDEO_MAP (video_id, user_id, RELA_TYPE, RELA_ID)
        values (#{video_id}, #{user_id}, #{rela_type}, #{rela_id})
    </insert>

    <!-- 拿到某个视频 -->
    <select id="getVideo" parameterType="java.lang.Integer" resultType="com.youthchina.domain.jinhao.communityQA.Video">
        select * from COM_USER_VIDEO
        where video_id = #{video_id}
        and is_delete = 0
    </select>

    <!-- 删除某个视频 -->
    <update id="deleteVideo" parameterType="java.lang.Integer">
        update COM_USER_VIDEO
        set is_delete = 1,is_delete_time = now()
        where video_id = #{video_id}
    </update>
    <update id="deleteAllVideoAttention" parameterType="java.lang.Integer">
        update COM_VIDEO_ATTENTION set ATTEN_CANCEL = 1, ATTEN_CANCEL_TIME=now()
        where ATTEN_ID in (select ATTEN_ID from COM_VIDEO_ATTENTION_MAP where VIDEO_ID = #{video_id})
    </update>
    <update id="deleteAllVideoEvaluate" parameterType="java.lang.Integer">
        update COM_VIDEO_EVALUATE set EVALUATE_TYPE = 3, EVALUATE_TIME = now()
        where EVALUATE_ID in (select EVALUATE_ID from COM_VIDEO_EVALUATE_MAP where VIDEO_ID = #{video_id})
    </update>
    <update id="deleteAllVideoComment" parameterType="java.lang.Integer">
        update COM_VIDEO_COMMENT set IS_DELETE=1, IS_DELETE_TIME = now()
        where COMMENT_ID in (select COMMENT_ID from COM_VIDEO_COMMENT_MAP where VIDEO_ID = #{video_id})
    </update>
    <!-- 检查用户对该视频的关注状态 -->
    <select id="videoAttentionStatus" resultType="com.youthchina.domain.jinhao.communityQA.VideoAttention">
        select a.* from COM_VIDEO_ATTENTION a, COM_VIDEO_ATTENTION_MAP m
        where a.user_id = #{user_id}
        and m.video_id = #{video_id}
        and a.atten_id = m.atten_id
    </select>

    <!-- 重新关注某个视频 -->
    <update id="reAddAttentionToVideo" parameterType="java.lang.Integer">
        update COM_VIDEO_ATTENTION
        set atten_cancel = 0, atten_time = now()
        where atten_id = #{atten_id}
    </update>

    <!-- 关注某个视频 -->
    <insert id="addAttentionToVideo" parameterType="com.youthchina.domain.jinhao.communityQA.VideoAttention"
            useGeneratedKeys="true" keyProperty="atten_id">
        insert into COM_VIDEO_ATTENTION(user_id, atten_time, atten_cancel)
        values (#{user_id}, now(), 0)
    </insert>

    <!-- 建立关注和视频的映射 -->
    <insert id="createMapBetweenAttentionAndVideo">
        insert into COM_VIDEO_ATTENTION_MAP(atten_id, video_id)
        values (#{atten_id}, #{video_id})
    </insert>

    <!-- 拿到某个视频关注 -->
    <select id="getVideoAttention" parameterType="java.lang.Integer" resultType="com.youthchina.domain.jinhao.communityQA.VideoAttention">
        select * from COM_VIDEO_ATTENTION where atten_id = #{atten_id}
    </select>

    <!-- 取消关注视频 -->
    <update id="cancelAttentionVideo" parameterType="java.lang.Integer">
        update COM_VIDEO_ATTENTION
        set atten_cancel =1, atten_cancel_time = now()
        where atten_id = #{atten_id}
    </update>

    <!-- 评论视频 -->
    <insert id="addCommentToVideo" parameterType="com.youthchina.domain.jinhao.communityQA.VideoComment"
            useGeneratedKeys="true" keyProperty="comment_id">
        insert into COM_VIDEO_COMMENT(comment_content, user_id, user_anony, comment_pub_time, comment_edit_time,
                is_delete)
        values (#{comment_content}, #{user_id}, #{user_anony}, NOW(), NOW(), 0)
    </insert>

    <!-- 建立视频评论和视频的映射 -->
    <insert id="createMapBetweenCommentAndVideo">
        insert into COM_VIDEO_COMMENT_MAP(comment_id, video_id, comment_level)
        values (#{comment_id}, #{video_id}, #{comment_level})
    </insert>

    <!-- 拿到某个评论 -->
    <select id="getVideoComment" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.VideoComment">
        select * from COM_VIDEO_COMMENT
        where comment_id = #{comment_id}
        and is_delete = 0;
    </select>

    <!-- 删除某个评论 -->
    <update id="deleteVideoComment" parameterType="java.lang.Integer">
        update COM_VIDEO_COMMENT
        set is_delete = 1, is_delete_time = now()
        where comment_id = #{comment_id}
    </update>

    <!-- 检查用户对视频的评价状态 -->
    <select id="videoEvaluateStatus" resultType="com.youthchina.domain.jinhao.communityQA.VideoEvaluate">
        select a.* from COM_VIDEO_EVALUATE a, COM_VIDEO_EVALUATE_MAP m
        where a.user_id = #{user_id}
        and m.video_id = #{video_id}
        and a.evaluate_id = m.evaluate_id
    </select>

    <!-- 对视频评价 -->
    <insert id="addEvaluationToVideo" parameterType="com.youthchina.domain.jinhao.communityQA.VideoEvaluate"
    useGeneratedKeys="true" keyProperty="evaluate_id">
        insert into COM_VIDEO_EVALUATE(user_id, evaluate_type, evaluate_time)
        values (#{user_id}, 1, now())
    </insert>

    <!-- 建立评价和视频的映射 -->
    <insert id="createMapBetweenEvaluationAndVideo">
        insert into COM_VIDEO_EVALUATE_MAP(evaluate_id, video_id)
        values (#{evaluate_id}, #{video_id})
    </insert>

    <!-- 拿到某个评价 -->
    <select id="getVideoEvaluate" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.VideoEvaluate">
        select * from COM_VIDEO_EVALUATE
        where evaluate_id = #{evaluate_id}
    </select>

    <!-- 重新评价视频 -->
    <update id="reEvaluateVideo" parameterType="java.lang.Integer">
        update COM_VIDEO_EVALUATE
        set evaluate_type = 1, evaluate_time = now()
        where evaluate_id = #{evaluate_id}
    </update>

    <update id="cancelEvaluateVideo" parameterType="java.lang.Integer">
        update COM_VIDEO_EVALUATE
        set evaluate_type = 3, evaluate_time = now()
        where evaluate_id = #{evaluate_id}
    </update>
    <!-- 拿到某个视频的关注数 -->
    <select id="countVideoFollwers" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
        select count(m.atten_id) from COM_VIDEO_ATTENTION_MAP m, COM_VIDEO_ATTENTION a
        where m.video_id = #{video_id}
        and a.atten_id = m.atten_id
        and a.atten_cancel = 0
    </select>

    <!-- 拿到某视频的评论数 -->
    <select id="countVideoComments" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(m.video_id) from COM_VIDEO_COMMENT_MAP m, COM_VIDEO_COMMENT a
        where m.video_id = #{video_id}
        and a.comment_id = m.comment_id
        and a.is_delete = 0
    </select>

    <!-- 拿到某个视频的赞同数 -->
    <select id="countVideoAgreement" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(m.video_id) from COM_VIDEO_EVALUATE_MAP m, COM_VIDEO_EVALUATE a
        where m.video_id = #{video_id}
        and m.evaluate_id = a.evaluate_id
        and a.evaluate_type = 1
    </select>

    <!-- 拿到某个视频的不赞同数 -->
    <select id="countVideoDisagreement" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(m.video_id) from COM_VIDEO_EVALUATE_MAP m, COM_VIDEO_EVALUATE a
        where m.video_id = #{video_id}
        and m.evaluate_id = a.evaluate_id
        and a.evaluate_type = 2
    </select>

    <!--拿到用户提出的问题-->
    <select id="getMyQuestions" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Question">
        select a.* from COM_AUTHOR_QUESTION_MAP m, COM_QUESTION a
        where m.user_id = #{user_id}
        and a.ques_id = m.ques_id
        and a.is_delete = 0
        order by a.ques_edit_time desc
    </select>

    <!--拿到用户关注的问题-->
    <select id="listMyAttenQuestion" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.Question">
        select q.* from COM_QUESTION_ATTENTION_MAP m, COM_QUESTION_ATTENTION a, COM_QUESTION q
        where a.user_id=#{user_id}
        and a.atten_id = m.atten_id
        and a.atten_cancel = 0
        and q.ques_id = m.ques_id
        and q.is_delete = 0
    </select>

    <!--拿到用户做过的回答-->
    <select id="listMyAnswer" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        select * from COM_QUESTION_ANSWER where USER_ID = #{user_id}
        and is_delete=0
    </select>

    <!--拿到用户点赞过的回答 -->
    <select id="listMyAgreeAnswer" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        select s.* from COM_ANSWER_EVALUATE a, COM_ANSWER_EVALUATE_MAP m, COM_QUESTION_ANSWER s
        where a.user_id = #{user_id}
        and a.evaluate_type = 1
        and a.evaluate_id = m.evaluate_id
        and s.answer_id = m.answer_id
        and s.is_delete = 0
    </select>

    <!-- 得到问题的回答数 -->
    <select id="countAnswer" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(m.answer_id) from COM_QUESTION_ANSWER_MAP m, COM_QUESTION_ANSWER a
        where m.ques_id = #{ques_id}
        and m.answer_id = a.answer_id
        and a.is_delete = 0
    </select>

    <!-- 拿到用户收到的所有邀请 -->
    <select id="listInvitationGot" parameterType="java.lang.Integer"
            resultType="com.youthchina.domain.jinhao.communityQA.AnswerInvitation">
        select a.* from COM_ANSWER_INVITATION_MAP m, COM_ANSWER_INVITATION a, COM_QUESTION q
        where m.invited_user_id=#{user_id}
        and a.invit_id=m.invit_id
        and a.invit_accept=0
        and a.invit_ques_id=q.ques_id
        and q.is_delete=0
    </select>

    <!-- 查看用户已经邀请过哪些用户回答某个问题 -->
    <select id="listUsersInvitedByMeToQuestion" resultType="java.lang.Integer">
        select m.invited_user_id from COM_ANSWER_INVITATION_MAP m, COM_ANSWER_INVITATION a
        where a.invit_ques_id = #{ques_id}
        and a.invit_user_id = #{user_id}
        and a.invit_id = m.invit_id
    </select>




    <select id="getAnswerCommentById" resultMap="commentInfo" parameterType="java.lang.Integer">
        select ac.*, u.*, ace.*, acd.* from COM_ANSWER_COMMENT ac
              left join SYS_USER u on u.USER_ID = ac.USER_ID and u.IS_DELETE = 0
              left join (COM_COMMENT_DISCUSS acd, COM_COMMENT_DISCUSS_MAP cdm)
                      on cdm.COMMENT_ID = ac.COMMENT_ID and acd.DISCUSS_ID = cdm.DISCUSS_ID and acd.IS_DELETE = 0
              left join (COM_COMMENT_EVALUATE ace, COM_COMMENT_EVALUATE_MAP cem)
                      on cem.COMMENT_ID = ac.COMMENT_ID and ace.EVALUATE_ID = cem.EVALUATE_ID
              where ac.COMMENT_ID = #{comment_id} and ac.IS_DELETE = 0
    </select>
    
    <select id="getAnswerDiscussById" resultMap="discussInfo" parameterType="java.lang.Integer">
        select cd.DISCUSS_ID, cd.USER_ANONY, cd.DISCUSS_CONTENT,
               cd.DISCUSS_TARGET_ID, cd.DISCUSS_PUB_TIME,
               u.*, de.EVALUATE_TYPE, de.EVALUATE_ID from COM_COMMENT_DISCUSS cd
        left join SYS_USER u
                on u.USER_ID = cd.USER_ID and u.IS_DELETE = 0
        left join (COM_DISCUSS_EVALUATE de, COM_DISCUSS_EVALUATE_MAP dem)
                on dem.DISCUSS_ID = cd.DISCUSS_ID and de.EVALUATE_ID = dem.EVALUATE_ID and de.EVALUATE_TYPE != 3
        where cd.DISCUSS_ID = #{discuss_id} and cd.IS_DELETE = 0
    </select>

    <select id="getAnswersByQuestionId" resultMap="answerInfo" parameterType="java.lang.Integer">
        select qas.*, u.*, ac.*, ae.EVALUATE_ID, ae.EVALUATE_TYPE from (COM_QUESTION_ANSWER qas, COM_QUESTION_ANSWER_MAP qam)
                left join SYS_USER u on u.USER_ID = qas.USER_ID and u.IS_DELETE = 0
                left join (COM_ANSWER_COMMENT ac, COM_ANSWER_COMMENT_MAP acm)
                      on acm.ANSWER_ID = qas.ANSWER_ID and ac.COMMENT_ID = acm.COMMENT_ID and ac.IS_DELETE = 0
                left join (COM_ANSWER_EVALUATE ae, COM_ANSWER_EVALUATE_MAP aem)
                      on ae.EVALUATE_ID = aem.EVALUATE_ID and aem.ANSWER_ID = qas.ANSWER_ID and ae.EVALUATE_TYPE != 3
        where qam.QUES_ID = #{ques_id} and qam.ANSWER_ID = qas.ANSWER_ID and qas.IS_DELETE = 0
    </select>

    <select id="getCommentsByAnswerId" resultMap="commentInfo" parameterType="java.lang.Integer">
        select ac.COMMENT_ID, ac.USER_ANONY, ac.COMMENT_CONTENT, ac.COMMENT_EDIT_TIME, ac.COMMENT_PUB_TIME
             , u.*, ace.EVALUATE_ID, ace.EVALUATE_TYPE from (COM_ANSWER_COMMENT ac, COM_ANSWER_COMMENT_MAP acm)
                left join SYS_USER u on u.USER_ID = ac.USER_ID and u.IS_DELETE = 0
                left join (COM_COMMENT_EVALUATE ace, COM_COMMENT_EVALUATE_MAP cem)
                      on cem.COMMENT_ID = ac.COMMENT_ID and ace.EVALUATE_ID = cem.EVALUATE_ID and ace.EVALUATE_TYPE != 3
        where acm.ANSWER_ID = #{answer_id} and acm.COMMENT_ID = ac.COMMENT_ID and ac.IS_DELETE = 0
    </select>

    <select id="getDiscussesByCommentId" resultMap="discussInfo" parameterType="java.lang.Integer">
        select cd.DISCUSS_ID,cd.DISCUSS_TARGET_ID, cd.USER_ANONY,
               cd.DISCUSS_CONTENT, cd.DISCUSS_PUB_TIME, u.*, de.EVALUATE_ID,de.EVALUATE_TYPE from (COM_COMMENT_DISCUSS cd, COM_COMMENT_DISCUSS_MAP cdm)
                left join SYS_USER u
                      on u.USER_ID = cd.USER_ID and u.IS_DELETE = 0
                left join (COM_DISCUSS_EVALUATE de, COM_DISCUSS_EVALUATE_MAP dem)
                      on dem.DISCUSS_ID = cd.DISCUSS_ID and de.EVALUATE_ID = dem.EVALUATE_ID and de.EVALUATE_TYPE != 3
        where cdm.COMMENT_ID = #{comment_id} and cdm.DISCUSS_ID = cd.DISCUSS_ID and cd.IS_DELETE = 0
    </select>

    <select id="getQuestionRelaTypeAndRelaId" resultType="com.youthchina.domain.jinhao.communityQA.QuestionRelaTypeAndId"
            parameterType="java.lang.Integer">
        select aqm.rela_type, aqm.rela_id from COM_AUTHOR_QUESTION_MAP aqm
        where aqm.QUES_ID = #{ques_id}
    </select>

    <select id="isAnswerBelongToQuestion" resultType="java.lang.Boolean">
        select count(ANSWER_ID) from COM_QUESTION_ANSWER_MAP
        where ANSWER_ID = #{answer_id}
        and QUES_ID = #{ques_id}
    </select>

    <select id="getQuestionIdByTitleOrCompanyName" resultType="java.lang.Integer" parameterType="java.lang.String">
        select q.QUES_ID from COM_QUESTION q
          where q.QUES_TITLE like CONCAT(CONCAT('%',#{searchContent}),'%')
        union
        select q.QUES_ID from COM_QUESTION q, COM_AUTHOR_QUESTION_MAP qm, COMPANY_INFO c
          where c.COMPANY_NAME like CONCAT(CONCAT('%',#{searchContent}),'%')
          and c.COMPANY_ID = qm.RELA_ID
          and qm.RELA_TYPE = 2
          and qm.QUES_ID = q.QUES_ID
        union
        select q.QUES_ID from COM_QUESTION q, COM_AUTHOR_QUESTION_MAP qm, JOB_INFO j
          where j.JOB_NAME like CONCAT(CONCAT('%',#{searchContent}),'%')
          and j.JOB_ID = qm.RELA_ID
          and qm.RELA_TYPE = 3
          and qm.QUES_ID = q.QUES_ID
    </select>

    <select id="getVideoIdByTitleOrCompanyName" resultType="java.lang.Integer" parameterType="java.lang.String">
        select v.VIDEO_ID from COM_USER_VIDEO v
          where v.VIDEO_TITLE like CONCAT(CONCAT('%',#{searchContent}),'%')
        union
        select v.VIDEO_ID from COM_USER_VIDEO v, COM_USER_VIDEO_MAP vm, COMPANY_INFO c
          where c.COMPANY_NAME like CONCAT(CONCAT('%',#{searchContent}),'%')
          and c.COMPANY_ID = vm.RELA_ID
          and vm.RELA_TYPE = 2
          and vm.VIDEO_ID = v.VIDEO_ID
    </select>


    <update id="deleteAllAttention" parameterType="java.lang.Integer">
        update COM_QUESTION_ATTENTION set ATTEN_CANCEL=1, ATTEN_CANCEL_TIME=now()
        where ATTEN_ID in (
              select ATTEN_ID from COM_QUESTION_ATTENTION_MAP where QUES_ID = #{ques_id}
            )
    </update>

    <update id="deleteAllAnswers" parameterType="java.lang.Integer">
        update COM_QUESTION_ANSWER set IS_DELETE = 1, IS_DELETE_TIME = now()
        where ANSWER_ID in (select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID = #{ques_id})
    </update>

    <update id="deleteAllAnswerEvaluation" parameterType="java.lang.Integer">
        update COM_ANSWER_EVALUATE set EVALUATE_TYPE = 3, EVALUATE_TIME = now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_ANSWER_EVALUATE_MAP where ANSWER_ID in (
                     select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID=#{ques_id}
                  )
            )
    </update>

    <delete id="deleteAllAnswerInvitation" parameterType="java.lang.Integer">
        delete from COM_ANSWER_INVITATION where INVIT_QUES_ID = #{ques_id}
    </delete>

    <delete id="deleteAllAnswerInvitationMap" parameterType="java.lang.Integer">
        delete from COM_ANSWER_INVITATION_MAP where INVIT_ID in (
          select INVIT_ID from COM_ANSWER_INVITATION where INVIT_QUES_ID=#{ques_id}
            )
    </delete>

    <update id="deleteAllComments" parameterType="java.lang.Integer">
        update COM_ANSWER_COMMENT set IS_DELETE = 1,IS_DELETE_TIME = now()
        where COMMENT_ID in (
                            select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID in
                                    (
                                    select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID = #{ques_id}
                                    )
                            )
    </update>

    <update id="deleteAllCommentEvaluation" parameterType="java.lang.Integer">
        update COM_COMMENT_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_COMMENT_EVALUATE_MAP where COMMENT_ID in (
                  select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID in (
                        select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID = #{ques_id}
                  )
               )
             )

    </update>
    <update id="deleteAllDiscusses" parameterType="java.lang.Integer">
        update COM_COMMENT_DISCUSS set IS_DELETE = 1, IS_DELETE_TIME = now()
        where DISCUSS_ID in (
                            select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID in
                                    (
                                    select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID in
                                          (
                                          select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID = #{ques_id}
                                          )
                                    )
                            )
    </update>

    <update id="deleteAllDiscussEvaluation" parameterType="java.lang.Integer">
        update COM_DISCUSS_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_DISCUSS_EVALUATE_MAP where DISCUSS_ID in (
                  select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID in
                      (
                          select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID in
                          (
                              select ANSWER_ID from COM_QUESTION_ANSWER_MAP where QUES_ID = #{ques_id}
                          )
                      )
                  )
            )
    </update>

    <update id="deleteAllAnswerEvaluationByAnswerId" parameterType="java.lang.Integer">
        update COM_ANSWER_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_ANSWER_EVALUATE_MAP where ANSWER_ID = #{answer_id}
            )
    </update>

    <update id="deleteAllCommentsByAnswerId" parameterType="java.lang.Integer">
        update COM_ANSWER_COMMENT set IS_DELETE=1, IS_DELETE_TIME=now()
        where COMMENT_ID in (
              select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID = #{answer_id}
            )
    </update>

    <update id="deleteAllCommentEvaluationByAnswerId" parameterType="java.lang.Integer">
        update COM_COMMENT_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_COMMENT_EVALUATE_MAP where COMMENT_ID in (
                  select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID = #{answer_id}
              )
            )
    </update>

    <update id="deleteAllDiscussesByAnswerId" parameterType="java.lang.Integer">
        update COM_COMMENT_DISCUSS set IS_DELETE=1, IS_DELETE_TIME=now()
        where DISCUSS_ID in (
              select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID in (
                  select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID = #{answer_id}
              )
            )
    </update>

    <update id="deleteAllDiscussEvaluationByAnswerId" parameterType="java.lang.Integer">
        update COM_DISCUSS_EVALUATE set EVALUATE_TYPE=3, EVALUATE_TIME=now()
        where EVALUATE_ID in (
              select EVALUATE_ID from COM_DISCUSS_EVALUATE_MAP where DISCUSS_ID in (
                  select DISCUSS_ID from COM_COMMENT_DISCUSS_MAP where COMMENT_ID in (
                    select COMMENT_ID from COM_ANSWER_COMMENT_MAP where ANSWER_ID = #{answer_id}
                  )
              )
            )
    </update>
</mapper>