<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youthchina.dao.jinhao.CommunityQAMapper">
    <!-- 显示 -->
    <!-- 列出所有问题 -->
    <select id="listAllQuestion" resultType="com.youthchina.domain.jinhao.communityQA.Question">
        select * from COM_QUESTION where ques_delete=0
    </select>

    <!-- 列出某个问题的所有标签 -->
    <select id="listAllQuesetionLabel" parameterType="com.youthchina.domain.jinhao.communityQA.Question"
            resultType="com.youthchina.domain.jinhao.communityQA.Label">
        select l.* from SYS_LABEL_CLASS l, COM_QUESTION_LABEL_MAP m
        where m.ques_id = #{ques_id}
        and m.lab_num = l.lab_num
        and l.start_status = 1
    </select>

    <!-- 列出某个问题的关注人数 -->
    <select id="countTheFollower" parameterType="com.youthchina.domain.jinhao.communityQA.Question"
            resultType="java.lang.Integer">
        select count(a.*) from COM_QUESTION_ATTENTION a, COM_QUESTION_ATTENTION_MAP m
        where m.ques_id = #{ques_id}
        and m.atten_id = a.atten_id
        and a.atten_cancel = 0
    </select>

    <!-- 列出某个问题的所有回答 -->
    <select id="listAllQuestionAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.Question"
            resultType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        select a.* from COM_QUESTION_ANSWER a, COM_QUESTION_ANSWER_MAP m
        where m.ques_id = #{ques_id}
        and a.answer_id = m.answer_id
        and a.answer_delete = 0
        order by m.answer_level asc
    </select>

    <!-- 列出某个回答的赞同数 -->
    <select id="countAgreement" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer"
            resultType="java.lang.Integer">
        select count(a.*) from COM_ANSWER_AGREE_MAP m, COM_ANSWER_AGREE a
        where m.answer_id = #{answer_id}
        and a.agree_id = m.agree_id
        and a.agree_cancel = 0
    </select>

    <!-- 列出某个回答的所有评论 -->
    <select id="listAllAnswerComment" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer"
            resultType="com.youthchina.domain.jinhao.communityQA.AnswerComment">
        select a.* from COM_ANSWER_COMMENT_MAP m, COM_ANSWER_COMMENT a
        where m.answer_id = #{answer_id}
        and m.comment_id = a.comment_id
        and a.comment_delete = 0
        order by m.comment_level asc
    </select>

    <!-- 列出某个评论的所有讨论 -->
    <select id="listAllCommentDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerComment"
            resultType="com.youthchina.domain.jinhao.communityQA.CommentDiscuss">
        select a.* from COM_COMMENT_DISCUSS_MAP m, COM_COMMENT_DISCUSS a
        where m.comment_id = #{comment_id}
        and m.discuss_id = a.discuss_id
        and a.discuss_delete = 0
        order by m.discuss_level asc
    </select>


    <!-- 操作 -->
    <!-- 添加问题 -->
    <insert id="addQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.Question" useGeneratedKeys="true"
    keyProperty="ques_id">
        insert into COM_QUESTION(ques_title,ques_abbre,ques_body,ques_pub_time,ques_edit_time,ques_delete)
        values (#{ques_title},#{ques_abbre},#{ques_body},#{ques_pub_time},#{ques_edit_time},#{ques_delete})
    </insert>

    <!-- 建立问题和用户的映射 -->
    <insert id="createMapBetweenQuestionAndUser">
        insert into COM_AUTHOR_QUESTION_MAP(user_id, ques_id)
        values (#{user.id}, #{question.ques_id})
    </insert>

    <!-- 给问题添加标签 -->
    <insert id="addLabels">
        insert into COM_QUESTION_LABEL_MAP(ques_id, lab_num)
        values
        <foreach collection ="labels" item="label" index= "index" separator =",">
            (
            #{question.ques_id}, #{label.label_num},
            )
        </foreach >
    </insert>

    <!-- 删除问题 -->
    <update id="deleteQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.Question">
        update COM_QUESTION set ques_delete=#{ques_delete}, ques_delete_time=#{ques_delete_time}
        where ques_id=#{ques_id}
    </update>

    <!-- 编辑问题 -->
    <update id="editQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.Question">
        update COM_QUESTION set ques_title=#{ques_title}, ques_abbre=#{ques_abbre}, ques_body=#{ques_body},
                                ques_edit_time=#{ques_edit_time}
        where ques_id=#{ques_id}
    </update>


    <!-- 检查是否已经关注 -->
    <select id="isAttention" resultType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        select a.* from COM_QUESTION_ATTENTION_MAP m, COM_QUESTION_ATTENTION a
        where m.ques_id = #{question.ques_id}
        and a.user_id = #{user.id}
        and m.atten_id = a.atten_id
    </select>

    <!-- 如果第一次关注，则关注问题， 并且建立映射  -->
    <insert id="addAttentionToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention"
    useGeneratedKeys="true" keyProperty="atten_id">
        insert into COM_QUESTION_ATTENTION (user_id, atten_time, atten_cancel)
        values (#{user_id}, #{atten_time}, #{atten_cancel})
    </insert>
    <!-- 建立映射 -->
    <insert id="createMapBetweenAttentionAndQuestion">
        insert into COM_QUESTION_ATTENTION_MAP (ques_id, atten_id)
        values (#{question.ques_id}, #{questionAttention.atten_id})
    </insert>
    
    <!-- 如果之前已经关注过，则更新字段 -->
    <update id="reAddAttentionToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        update COM_QUESTION_ATTENTION set atten_cancel=#{atten_cancel}, atten_time=#{atten_time}
        where atte_id=#{atten_id}
    </update>

    <!-- 取消关注 -->
    <update id="cancelAttention" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAttention">
        update COM_QUESTION_ATTENTION set atten_cancel=#{atten_cancel}, atten_cancel_time=#{atten_cancel_time}
        where atte_id=#{atten_id}
    </update>

    <!-- 回答问题 -->
    <insert id="addAnswerToQuestion" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer"
    useGeneratedKeys="true" keyProperty="answer_id">
        insert into COM_QUESTION_ANSWER (answer_content, user_id, user_anony, answer_pub_time, answer_edit_time,
                answer_delete)
        values (#{answer_content}, #{user_id}, #{user_anony}, #{answer_pub_time}, #{answer_edit_time}, #{answer_delete})
    </insert>

    <!-- 建立回答和问题的映射 -->
    <insert id="createMapBetweenQuestionAndAnswer">
        insert into COM_QUESTION_ANSWER_MAP (ques_id, answer_id) values (#{question.ques_id}, #{answer.answer_id})
    </insert>
    
    <!-- 删除回答 -->
    <update id="deleteAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        update COM_QUESTION_ANSWER set answer_delete=#{answer_delete}, answer_delete_time=#{answer_delete_time}
        where answer_id=#{answer_id}
    </update>

    <!--  编辑回答 -->
    <update id="editAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.QuestionAnswer">
        update COM_QUESTION_ANSWER
        set answer_content=#{answer_content},user_anony=#{user_anony},answer_edit_time=#{answer_edit_time}
        where answer_id=#{answer_id}
    </update>

    <!-- 检查是否赞同了回答 -->
    <select id="isAgreed" resultType="com.youthchina.domain.jinhao.communityQA.AnswerAgree">
        select a.* from COM_ANSWER_AGREE_MAP m, COM_ANSWER_AGREE a
        where m.answer_id = #{questionAnswer.answer_id}
        and a.user_id = #{user.id}
        and m.agree_id = a.agree_id
    </select>

    <!-- 如果是第一次赞同回答，则插入赞同，并建立映射 -->
    <insert id="addAgreeToAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerAgree"
            useGeneratedKeys="true" keyProperty="agree_id">
        insert into COM_ANSWER_AGREE (user_id,agree_time,agree_cancel)
        values (#{user_id}, #{agree_time}, #{agree_cancel})
    </insert>

    <!-- 建立映射 -->
    <insert id="createMapBetweenAnswerAndAgree">
        insert into COM_ANSWER_AGREE_MAP (answer_id, agree_id)
        values (#{questionAnswer.answer_id}, #{answerAgree.agree_id})
    </insert>

    <!-- 如果已经赞同过 -->
    <update id="reAgreeAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerAgree">
        update COM_ANSWER_AGREE
        set agree_cancel=#{agree_cancel}, agree_time=#{agree_time}
        where agree_id=#{agree_id}
    </update>

    <!-- 取消赞同 -->
    <update id="cancelAgreeAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerAgree">
        update COM_ANSWER_AGREE
        set agree_cancel=#{agree_cancel}, agree_cancel_time=#{agree_cancel_time}
        where agree_id=#{agree_id}
    </update>

    <!-- 检查是否反对了回答 -->
    <select id="isDisAgreed" resultType="com.youthchina.domain.jinhao.communityQA.AnswerDisagree">
        select a.* from COM_ANSWER_DISAGREE_MAP m, COM_ANSWER_DISAGREE a
        where m.answer_id = #{questionAnswer.answer_id}
        and a.user_id = #{user.id}
        and m.disagree_id = a.disagree_id
    </select>

    <!-- 如果是第一次反对回答，则插入反对，并建立映射 -->
    <insert id="addDisagreeToAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerDisagree"
            useGeneratedKeys="true" keyProperty="disagree_id">
        insert into COM_ANSWER_DISAGREE (user_id,disagree_time,disagree_cancel)
        values (#{user_id}, #{disagree_time}, #{disagree_cancel})
    </insert>

    <!-- 建立映射 -->
    <insert id="createMapBetweenAnswerAndDisagree">
        insert into COM_ANSWER_DISAGREE (answer_id, disagree_id)
        values (#{questionAnswer.answer_id}, #{answerDisagree.disagree_id})
    </insert>

    <!-- 如果已经反对过 -->
    <update id="reDisagreeAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerDisagree">
        update COM_ANSWER_DISAGREE
        set disagree_cancel=#{disagree_cancel}, disagree_time=#{disagree_time}
        where disagree_id=#{disagree_id}
    </update>

    <!-- 取消反对 -->
    <update id="cancelDisagreeAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerDisagree">
        update COM_ANSWER_DISAGREE
        set disagree_cancel=#{disagree_cancel}, disagree_cancel_time=#{disagree_cancel_time}
        where disagree_id=#{disagree_id}
    </update>

    <!-- 评论回答 -->
    <insert id="addCommentToAnswer" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerComment"
    useGeneratedKeys="true" keyProperty="comment_id">
        insert into COM_ANSWER_COMMENT (comment_content, user_id, user_anony, comment_public_time, comment_edit_time,
                comment_delete)
        values (#{comment_content}, #{user_id}, #{user_anony}, #{comment_public_time}, #{comment_edit_time},
                #{comment_delete})
    </insert>

    <!-- 建立评论和回答的映射关系 -->
    <insert id="createMapBetweenAnswerAndComment">
        insert into COM_ANSWER_COMMENT_MAP (answer_id, comment_id)
        values (#{questionAnswer.answer_id}, #{answerComment.comment_id})
    </insert>

    <!-- 删除评论 -->
    <update id="deleteComment" parameterType="com.youthchina.domain.jinhao.communityQA.AnswerComment">
        update COM_ANSWER_COMMENT
        set comment_delete=#{comment_delete}, comment_delete_time=#{comment_delete_time}
        where comment_id=#{comment_id}
    </update>



    <!-- 评论讨论 -->
    <insert id="addDiscussToComment" parameterType="com.youthchina.domain.jinhao.communityQA.CommentDiscuss"
            useGeneratedKeys="true" keyProperty="discuss_id">
        insert into COM_COMMENT_DISCUSS (discuss_content, user_id, user_anony, discuss_pub_time, discuss_edit_time,
                discuss_delete)
        values (#{discuss_content}, #{user_id}, #{user_anony}, #{discuss_pub_time}, #{discuss_edit_time},
                #{discuss_delete})
    </insert>

    <!-- 建立讨论和评论的映射关系 -->
    <insert id="createMapBetweenDiscussAndComment">
        insert into COM_COMMENT_DISCUSS_MAP (comment_id, discuss_target_id, discuss_id)
        values (#{answerComment.comment_id}, #{targetDiscuss.discuss_id}, #{commentDiscuss.discuss_id})
    </insert>

    <!-- 删除讨论 -->
    <update id="deleteDiscuss" parameterType="com.youthchina.domain.jinhao.communityQA.CommentDiscuss">
        update COM_COMMENT_DISCUSS
        set discuss_delete = #{discuss_delete}, discuss_delete_time=#{disucss_delete_time}
        where discuss_id = #{discuss_id}
    </update>
</mapper>