<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youthchina.dao.qingyang.JobMapper">


    <insert id="insertJob" parameterType="com.youthchina.domain.qingyang.Job"
            useGeneratedKeys="true" keyProperty="jobId">
        INSERT INTO JOB_INFO
        (
            COMPANY_ID,               JOB_NAME,     JOB_PROF_CODE,

            JOB_START_TIME,

            JOB_END_TIME,   JOB_TYPE,     JOB_DESCRIPTION,
            JOB_DUTY,       JOB_HIGHLIGHT, JOB_SALARY_FLOOR, JOB_SALARY_CAP,
            JOB_LINK,   CV_RECEI_MAIL,  CV_NAME_RULE, JOB_ACTIVE, USER_ID, ADD_TIME, IS_DELETE,
            IS_DELETE_TIME
        )
        VALUES
        (
            #{company.companyId},          #{jobName},     #{jobProfCode},
        <!--<choose>-->
            <!--<when test="jobStartTime != null">-->
                #{jobStartTime},
            <!--</when>-->
            <!--<otherwise>-->
                <!--NOW(),-->
            <!--</otherwise>-->
        <!--</choose>-->
            #{jobEndTime},  #{jobType},     #{jobDescription},
            #{jobDuty},   #{jobHighlight},  #{jobSalaryFloor}, #{jobSalaryCap},
            #{jobLink},  #{cvReceiMail}, #{cvNameRule},  #{jobActive}, #{userId}, NOW(), 0,
            NULL
        )
    </insert>

    <update id="updateJob" parameterType="com.youthchina.domain.qingyang.Job"
            useGeneratedKeys="true" keyProperty="jobId">
        UPDATE JOB_INFO
        SET
            COMPANY_ID = #{company.companyId},
            JOB_NAME = #{jobName},
            JOB_PROF_CODE = #{jobProfCode},
            JOB_START_TIME = #{jobStartTime},
            JOB_END_TIME = #{jobEndTime},
            JOB_TYPE = #{jobType},
            JOB_DESCRIPTION = #{jobDescription},
            JOB_DUTY = #{jobDuty},
            JOB_HIGHLIGHT = #{jobHighlight},
            JOB_SALARY_FLOOR = #{jobSalaryFloor},
            JOB_SALARY_CAP = #{jobSalaryCap},
            JOB_LINK = #{jobLink},
            CV_RECEI_MAIL = #{cvReceiMail},
            CV_NAME_RULE = #{cvNameRule},
            JOB_ACTIVE = #{jobActive}
        WHERE
            JOB_ID = #{jobId}
        AND IS_DELETE = 0
    </update>



    <resultMap id="job" type="com.youthchina.domain.qingyang.Job">
        <id property="jobId" column="JOB_ID"/>
        <result property="jobName" column="JOB_NAME"/>
        <result property="jobProfCode" column="JOB_PROF_CODE"/>
        <result property="jobStartTime" column="JOB_START_TIME"/>
        <result property="jobEndTime" column="JOB_END_TIME"/>
        <result property="jobType" column="JOB_TYPE"/>
        <result property="jobDescription" column="JOB_DESCRIPTION"/>
        <result property="jobDuty" column="JOB_DUTY"/>
        <result property="jobHighlight" column="JOB_HIGHLIGHT"/>
        <result property="jobSalaryFloor" column="JOB_SALARY_FLOOR"/>
        <result property="jobSalaryCap" column="JOB_SALARY_CAP"/>
        <result property="jobLink" column="JOB_LINK"/>
        <result property="cvReceiMail" column="CV_RECEI_MAIL"/>
        <result property="cvNameRule" column="CV_NAME_RULE"/>
        <result property="jobActive" column="JOB_ACTIVE"/>
        <result property="userId" column="USER_ID"/>
        <result property="addTime" column="JOB_ADD_TIME"/>
        <result property="collectNum" column="JOB_COLLECT_NUM"/>
        <association property="company" column="COMPANY_ID" javaType="com.youthchina.domain.qingyang.Company"
                     resultMap="com.youthchina.dao.qingyang.CompanyMapper.company"/>
        <association property="profession" javaType="com.youthchina.domain.qingyang.Profession">
            <id property="profNum" column="PROF_NUM"/>
            <result property="profCode" column="PROF_CODE"/>
            <result property="profLevel" column="PROF_LEVEL"/>
            <result property="profParentCode" column="PROF_PARENT_CODE"/>
            <result property="profChn" column="PROF_CHN"/>
            <result property="profEng" column="PROF_ENG"/>
            <result property="startTime" column="PROF_START_TIME"/>
        </association>
        <collection property="industries" ofType="com.youthchina.domain.qingyang.Industry">
            <id property="indNum" column="C_IND_NUM"/>
            <result property="jobId" column="JOB_ID"/>
            <result property="indCode" column="IND_CODE"/>
            <result property="indChn" column="IND_CHN"/>
            <result property="indEng" column="IND_ENG"/>
            <result property="indLevel" column="IND_LEVEL"/>
            <result property="indParentCode" column="IND_PARENT_CODE"/>
            <result property="startTime" column="IND_START_TIME"/>
        </collection>
        <collection property="jobLocationList" ofType="com.youthchina.domain.Qinghong.Location">
            <!--<id property="regionId" column="JOB_LOCATION_ID"/>-->
            <result property="regionId" column="JOB_REGION_NUM"/>
            <!--<result property="jobId" column="JOB_ID"/>-->
            <!--<result property="regionName" column="REGION_CHN"/>-->
            <!--<result property="region_eng" column="REGION_ENG"/>-->
            <!--<result property="region_level" column="REGION_LEVEL"/>-->
            <!--<result property="region_parent_num" column="REGION_PARENT_NUM"/>-->
            <!--<result property="start_time" column="REGION_START_TIME"/>-->
        </collection>
        <collection property="jobReqList" ofType="com.youthchina.domain.qingyang.Degree">
            <id property="degreeNum" column="DEGREE_NUM"/>
            <result property="degreeChn" column="DEGREE_CHN"/>
            <result property="degreeEng" column="DEGREE_ENG"/>
            <result property="startDate" column="DEGREE_START_DATE"/>
        </collection>
        <collection property="logoList" ofType="com.youthchina.domain.qingyang.Logo">
            <id property="logoId" column="LOGO_ID"/>
            <result property="docuLocalId" column="DOCU_LOCAL_ID"/>
            <result property="relaType" column="RELA_TYPE"/>
            <result property="relaId" column="RELA_ID"/>
        </collection>
    </resultMap>

    <resultMap id="jobListMap" type="java.util.HashMap">
        <collection property="job">
            <id property="indName" column="IND_NAME"/>
        </collection>
    </resultMap>

    <sql id="jobSelect">
            j.JOB_ID as JOB_ID,
            j.JOB_NAME as JOB_NAME,
            j.JOB_PROF_CODE as JOB_PROF_CODE,
            j.JOB_START_TIME as JOB_START_TIME,
            j.JOB_END_TIME as JOB_END_TIME,
            j.JOB_TYPE as JOB_TYPE,
            j.JOB_DESCRIPTION as JOB_DESCRIPTION,
            j.JOB_DUTY as JOB_DUTY,
            j.JOB_HIGHLIGHT as JOB_HIGHLIGHT,
            j.JOB_SALARY_FLOOR as JOB_SALARY_FLOOR,
            j.JOB_SALARY_CAP as JOB_SALARY_CAP,
            j.JOB_LINK as JOB_LINK,
            j.CV_RECEI_MAIL as CV_RECEI_MAIL,
            j.CV_NAME_RULE as CV_NAME_RULE,
            j.JOB_ACTIVE as JOB_ACTIVE,
            j.COMPANY_ID as COMPANY_ID,
            j.USER_ID as USER_ID,
            j.ADD_TIME as JOB_ADD_TIME,

#             com.COMPANY_NAME as COMPANY_NAME,
#             com.COMPANY_CODE as COMPANY_CODE,
#             com.COMPANY_INTRODUC as COMPANY_INTRODUC,
#             com.COMPANY_MAIL as COMPANY_MAIL,
#             com.COMPANY_WEBSITE as COMPANY_WEBSITE,
#             com.COMPANY_START_DATE as COMPANY_START_DATE,
#             com.COMPANY_VERIFY as COMPANY_VERIFY,
#             com.COMPANY_LOCATION as COMPANY_LOCATION,
#
#               country.COUNTRY_ABBRE as COUNTRY_ABBRE,
#               country.COUNTRY_CHN as COUNTRY_CHN,
#               country.COUNTRY_ENG as COUNTRY_ENG,
#               country.START_TIME as COUNTRY_START_TIME,
#
#             nature.NATURE_NUM as NATURE_NUM,
#             nature.NATURE_CHN as NATURE_CHN,
#             nature.NATURE_ENG as NATURE_ENG,
#             nature.NATURE_DETAIL as NATURE_DETAIL,
#             nature.START_TIME as NATURE_START_TIME,
#
#             scale.SCALE_NUM as SCALE_NUM,
#             scale.SCALE_CHN as SCALE_CHN,
#             scale.SCALE_ENG as SCALE_ENG,
#             scale.START_TIME as SCALE_START_TIME,

            class.IND_NUM as C_IND_NUM,
            i.JOB_IND_CODE as IND_CODE,
            class.IND_CHN as IND_CHN,
            class.IND_ENG as IND_ENG,
            class.IND_LEVEL as IND_LEVEL,
            class.IND_PARENT_CODE as IND_PARENT_CODE,
            class.START_TIME as IND_START_TIME,

            loc.JOB_REGION_NUM as JOB_REGION_NUM,
#             loc.JOB_LOCATION_ID as JOB_LOCATION_ID,
#             region.REGION_CHN as REGION_CHN,
#             region.REGION_ENG as REGION_ENG,
#             region.REGION_LEVEL as REGION_LEVEL,
#             region.REGION_PARENT_NUM as REGION_PARENT_NUM,
#             region.START_TIME as REGION_START_TIME,

            req.JOB_REQUIRE_ID as JOB_REQUIRE_ID,
            req.JOB_DEGREE_NUM as DEGREE_NUM,


            degree.DEGREE_CHN as DEGREE_CHN,
            degree.DEGREE_ENG as DEGREE_ENG,
            degree.START_DATE as DEGREE_START_DATE,

            prof.PROF_NUM as PROF_NUM,
            prof.PROF_LEVEL as PROF_LEVEL,
            prof.PROF_CODE as PROF_CODE,
            prof.PROF_PARENT_CODE as PROF_PARENT_CODE,
            prof.PROF_CHN as PROF_CHN,
            prof.PROF_ENG as PROF_ENG,
            prof.START_TIME as PROF_START_TIME,

            collect.JOB_COLLECT as JOB_COLLECT_NUM,

            logo.LOGO_ID as LOGO_ID,
            logo.DOCU_LOCAL_ID as DOCU_LOCAL_ID,
            logo.RELA_TYPE as RELA_TYPE,
            logo.RELA_ID as RELA_ID

    </sql>
    <sql id="jobJoin">
        LEFT OUTER JOIN COMPANY_INFO com ON j.COMPANY_ID = com.COMPANY_ID AND com.IS_DELETE = 0
#         LEFT OUTER JOIN SYS_COUNTRY	country ON com.COMPANY_COUNTRY = country.COUNTRY_ABBRE AND country.IS_DELETE = 0
#         LEFT OUTER JOIN SYS_COMPANY_NATURE	nature ON com.COMPANY_NATURE = nature.NATURE_NUM
#         LEFT OUTER JOIN SYS_COMPANY_SCALE	scale ON com.COMPANY_SCALE_NUM = scale.SCALE_NUM
        LEFT OUTER JOIN JOB_INDUSTRY i ON j.JOB_ID = i.JOB_ID AND i.IS_DELETE = 0
        LEFT OUTER JOIN SYS_IND_CLASS class ON i.JOB_IND_CODE = class.IND_CODE AND class.IS_DELETE = 0
        LEFT OUTER JOIN JOB_LOCATION loc ON j.JOB_ID = loc.JOB_ID AND loc.IS_DELETE = 0
        LEFT OUTER JOIN JOB_DEGREE_REQUIRE req ON j.JOB_ID = req.JOB_ID AND req.IS_DELETE = 0
        LEFT OUTER JOIN SYS_DEGREE degree ON req.JOB_DEGREE_NUM = degree.DEGREE_NUM
        LEFT OUTER JOIN SYS_PROF_CLASS prof ON j.JOB_PROF_CODE = prof.PROF_CODE AND prof.IS_DELETE = 0
        LEFT OUTER JOIN (SELECT COUNT(JOB_ID) as JOB_COLLECT, JOB_ID FROM STU_JOB_COLLECT WHERE IS_DELETE = 0 GROUP BY JOB_ID) as collect ON collect.JOB_ID = j.JOB_ID
        LEFT OUTER JOIN COMPANY_JOB_LOGO logo ON logo.RELA_TYPE = 2 AND logo.RELA_ID = j.JOB_ID AND logo.IS_DELETE = 0

</sql>
    <!--职位详情页, 含公司信息-->
    <select id="selectJobByJobId" resultMap="job" parameterType="java.lang.Integer">
        SELECT
        <include refid="jobSelect"/>
        FROM JOB_INFO j
        <include refid="jobJoin"/>
        WHERE
        j.JOB_ID = #{id} AND j.IS_DELETE = 0
    </select>

    <select id="getJobByUserId" resultMap="job" parameterType="java.lang.Integer">
        SELECT
        <include refid="jobSelect"/>
        FROM JOB_INFO j
        <include refid="jobJoin"/>
        WHERE
        j.USER_ID = #{userId} AND j.IS_DELETE = 0
    </select>

    <select id="selectAllJob" resultMap="job">
        SELECT
        <include refid="jobSelect"/>
        FROM JOB_INFO j
        <include refid="jobJoin"/>
    </select>

    <select id="selectJobByJobIdList" resultMap="job" parameterType="java.util.List">
        SELECT
        <include refid="jobSelect"/>
        FROM JOB_INFO j
        <include refid="jobJoin"/>
        WHERE j.IS_DELETE = 0 AND j.JOB_ID in
        <foreach item='id' index='index' collection="list" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="countJobByComId" resultType="Integer" parameterType="Integer">
        SELECT COUNT(*)
        FROM JOB_INFO j
        WHERE j.IS_DELETE = 0 AND j.COMPANY_ID = #{id}
    </select>

    <select id = "isCollect" resultType="Integer">
        SELECT COLLECT_ID
        FROM STU_JOB_COLLECT
        WHERE JOB_ID = #{jobId} AND STU_ID = #{stuId} AND IS_DELETE = 0
    </select>

    <select id="getJobByMore" resultMap="job">
        SELECT
        <include refid="jobSelect"/>
        FROM JOB_INFO j
        <include refid="jobJoin"/>
        WHERE
        j.IS_DELETE = 0 AND com.IS_DELETE = 0 AND loc.IS_DELETE = 0
        <if test="jobId != null">
            AND j.JOB_ID = #{jobId}
        </if>
        <if test="jobName != null">
            AND j.JOB_NAME like "%"#{jobName}"%"
        </if>
        <if test="comId != null">
            AND j.COMPANY_ID = #{comId}
        </if>
        <if test="comName != null">
            AND com.COMPANY_NAME like "%"#{comName}"%"
        </if>
        <if test="startTime != null">
            AND j.JOB_START_TIME <![CDATA[ >= ]]> #{startTime}
        </if>
        <if test="endTime != null">
            AND j.JOB_END_TIME <![CDATA[ <= ]]> #{endTime}
        </if>
        <if test="type != null">
            AND j.JOB_TYPE = #{type}
        </if>
        <if test="salaryFloor != null">
            AND j.JOB_SALARY_FLOOR <![CDATA[ >= ]]> #{salaryFloor}
        </if>
        <if test="salaryCap != null">
            AND j.JOB_SALARY_CAP <![CDATA[ <= ]]> #{salaryCap}
        </if>
        <if test="active != null">
            AND j.JOB_ACTIVE = #{active}
        </if>
        <if test="jobReqList != null">
            AND degree.DEGREE_NUM IN
            <foreach collection="jobReqList" index="index" item="item" open="(" separator="," close=")">
                #{item.degreeNum}
            </foreach>
        </if>
        <if test="industryList != null">
            AND class.IND_CODE IN
            <foreach collection="industryList" index="index" item="item" open="(" separator="," close=")">
                #{item.indCode}
            </foreach>
        </if>
    </select>


    <insert id="insertJobLocation"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO JOB_LOCATION
        ( JOB_REGION_NUM, JOB_ID, IS_DELETE)
        VALUES
        <foreach item="location" collection="locationList" separator=",">
            ( #{location.regionId}, #{jobId}, 0)
        </foreach>
    </insert>

    <update id="deleteJobLocation" parameterType="java.lang.Integer">
      UPDATE JOB_LOCATION SET IS_DELETE = 1, IS_DELETE_TIME = NOW()
      WHERE JOB_ID = #{ids}
    </update>

    <insert id="insertJobIndustry" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO JOB_INDUSTRY
        ( JOB_IND_CODE, JOB_ID, IS_DELETE)
        VALUES
        <foreach item="item" collection="list" separator=",">
            ( #{item.indCode}, #{item.jobId}, 0)
        </foreach>
    </insert>

    <update id="deleteJobIndustry" parameterType="java.lang.Integer">
      UPDATE JOB_INDUSTRY SET IS_DELETE = 1, IS_DELETE_TIME = NOW()
      WHERE JOB_ID = #{ids}
    </update>

    <insert id="insertJobDegree" useGeneratedKeys="true"
            keyProperty="id">
            INSERT INTO JOB_DEGREE_REQUIRE
            ( JOB_DEGREE_NUM, JOB_ID, IS_DELETE)
            VALUES
            <foreach item="degree" collection="degreeList" separator=",">
                ( #{degree.degreeNum}, #{jobId}, 0)
            </foreach>
    </insert>

    <update id="deleteJobDegree" parameterType="java.lang.Integer">
      UPDATE JOB_DEGREE_REQUIRE SET IS_DELETE = 1, IS_DELETE_TIME = NOW()
      WHERE JOB_ID = #{ids}
    </update>

    <sql id="jobDelete">
        UPDATE JOB_INFO j
            LEFT OUTER JOIN JOB_INDUSTRY i ON j.JOB_ID = i.JOB_ID AND i.IS_DELETE = 0
            LEFT OUTER JOIN JOB_LOCATION loc ON j.JOB_ID = loc.JOB_ID AND loc.IS_DELETE = 0
            LEFT OUTER JOIN JOB_DEGREE_REQUIRE req ON j.JOB_ID = req.JOB_ID AND req.IS_DELETE = 0
            LEFT OUTER JOIN STU_JOB_COLLECT ON j.JOB_ID = STU_JOB_COLLECT.JOB_ID AND STU_JOB_COLLECT.IS_DELETE = 0
            LEFT OUTER JOIN COMPANY_JOB_LOGO ON COMPANY_JOB_LOGO.RELA_TYPE = 2 AND j.JOB_ID = COMPANY_JOB_LOGO.RELA_ID AND COMPANY_JOB_LOGO.IS_DELETE = 0
        SET
            j.IS_DELETE = 1, j.IS_DELETE_TIME = NOW(),
            i.IS_DELETE = 1, i.IS_DELETE_TIME = NOW(),
            loc.IS_DELETE = 1, loc.IS_DELETE_TIME = NOW(),
            req.IS_DELETE = 1, req.IS_DELETE_TIME = NOW(),
            STU_JOB_COLLECT.IS_DELETE = 1, STU_JOB_COLLECT.IS_DELETE_TIME = NOW(),
            COMPANY_JOB_LOGO.IS_DELETE = 1, COMPANY_JOB_LOGO.IS_DELETE_TIME = NOW()
    </sql>

    <update id="deleteJob" parameterType="java.lang.Integer">
        <include refid="jobDelete"/>
        WHERE j.JOB_ID = #{id}
    </update>

    <update id="deleteJobByComId" parameterType="java.lang.Integer">
        <include refid="jobDelete"/>
        WHERE j.COMPANY_ID= #{comId}
    </update>

    <!--delete Logo of Job By JobID-->
    <update id="deleteJobLogo" parameterType="java.lang.Integer">
        UPDATE COMPANY_JOB_LOGO SET IS_DELETE = 1, IS_DELETE_TIME = NOW()
        WHERE RELA_TYPE = 2 AND RELA_ID = #{id}
    </update>

    <!--insert Job's Logos By Job's List of Logos-->
    <insert id="insertJobLogo" useGeneratedKeys="true" keyProperty="logoId">
        INSERT INTO COMPANY_JOB_LOGO
        ( DOCU_LOCAL_ID, RELA_TYPE, RELA_ID, IS_DELETE, IS_DELETE_TIME)
        VALUES
        <foreach item="logo" collection="logoList" separator=",">
            (#{logo.docuLocalId}, 2, #{jobId}, 0, NULL)
        </foreach>
    </insert>


</mapper>
