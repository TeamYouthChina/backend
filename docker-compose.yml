version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: youthchina-mysql
    networks:
      backend:
        ipv4_address: 172.28.1.1
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      MYSQL_DATABASE: youthchina
      MYSQL_PASSWORD: dbpass
      MYSQL_USER:
      MYSQL_ROOT_PASSWORdbuserD: rootpass
  rabbitmq:
    image: rabbitmq:3.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmqpass
networks:List;

/**
 * Created by zhongyangwu on 11/8/18.
 */
@RestController
@RequestMapping("${web.url.prefix}/users/**")
public class UserController extends DomainCRUDController<UserDTO, User, Integer> {

    private UserService userService;
    private String url;

    @Autowired
    private StudentService studentService;

    private AttentionServiceImpl attentionService;
    @Autowired
    private EssayServiceImpl essayService;
    private QuestionServiceImpl questionService;
    private VideoServiceImpl videoService;

    @Autowired
    public UserController(UserService userService, @Value("${web.url.prefix}") String prefix) {
        this.userService = userService;
        this.url = prefix + "/users/";
    }


    @GetMapping("/{id}")
    public ResponseEntity<?> findUser(@PathVariable Integer id, @AuthenticationPrincipal User user) throws ForbiddenException, NotFoundException {
        if (user.getId().equals(id)) {
            return get(id);
        } else {
            throw new ForbiddenException();
        }
    }

    @GetMapping("/{id}/attentions")
  backend:
    ipam:
      config:
        - subnet: 172.28.0.0/16
volumes:
  dbdata:
  rabbitmqdata:
